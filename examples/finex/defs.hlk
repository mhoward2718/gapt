define type nat;
define constant 0,1 of type nat;
define variable x,y,z,m,n,p,q,k,l,\alpha,b,s,b_0,s_0,x_0,x_1,y_0,k_0,n_0,m_0,p_0,q_0,z_0 of type nat;
define atom variable predicate X,Y,Z,\Theta,X_0,X_1,Y_0,Z_0,Z_1,Y',Z',Z'_0,Z''_0,Z'''_0,X'_0,X''_0,X'''_0,Y'_0,Y''_0,Z''''_0 of type nat;
define infix function + of type nat, nat to nat with weight 100;
define infix function * of type nat, nat to nat with weight 200;
define infix atom predicate \geq of type nat, nat;

define infix predicate \subseteq by all x ( X(x) impl Y(x) );
define equality for X = Y as
  X \subseteq Y and Y \subseteq X;
define infix predicate \subset by X \subseteq Y and not X = Y;
define infix predicate \neq by not X = Y;

define infix predicate < by not x \geq y;

define function max of type set to nat;
define function card of type set to nat;

define set \cap is defined by lambda n . ( X(n) and Y(n) );
define set \cup is defined by lambda n . ( X(n) or Y(n) );
define set comp is defined by lambda n . not X(n);
define set \setminus is defined by lambda n . ( X(n) and comp(Y)(n) );
define set singleton is defined by lambda n . n = m;
define set interval is defined by lambda n . n \geq x and y \geq n;
define set P is defined by lambda n . ex q ( n = m + k * q );
define set H is defined by lambda n . \setminus( \cap(X,interval(0,max(Z))), Z)(n);
define set \emptyset  is defined by lambda n . 0 = 1; # if used, must be denoted \emptyset()

define predicate IND by all X ( ( X(0) and all x ( X(x) impl X(x + 1) ) ) impl all x X(x) );
define predicate FIN by ex n all m ( X(m) impl m < n );
define predicate INF by not FIN(X);
define predicate FSS by FIN(Y) and Y \subseteq X;
define predicate FNESS by ( FIN(Y) and Y \neq \emptyset() ) and Y \subseteq X;
define predicate FEX by all Y ( FSS(Y,X) impl ex Z (FSS(Z,X) and Y \subset Z ) );
define predicate IV_1 by ex Z ( FNESS(Z,X) and max(Z) \geq m );

define predicate IV_2 by all Z ( ( FNESS(Z,X) and m \geq card( H(X,Z) ) ) impl ex Y ( FNESS(Y,X) and max(Z) < max(Y) ) );

define predicate MAX_0 by all X ( X \neq \emptyset() impl ( FIN(X) impl X(max(X)) ) );
define predicate MAX_1 by all X (FIN(X) impl all n ( X(n) impl max(X) \geq n ) );
define predicate C_0 by all X ( FIN(X) impl ( card(X) = 0 impl X = \emptyset() ) );
define predicate C_1 by all X all Y ( FIN(Y) impl ( X \subset Y impl card(X) < card(Y) ) );

define axiom 0 = 1 :- ;
define axiom n = k :- n = k + l * 0 ;
define axiom :- n \geq 0 ;
define axiom :- n \geq n ;
define axiom :- n \geq k, k \geq n ;
define axiom 0 \geq n :- 0 = n ;
define axiom 0 \geq n :- n = 0 ;
define axiom n \geq n + 1 :- ;
define axiom k \geq n, n \geq k + 1 :- ;
define axiom k \geq n, n \geq m :- k \geq m ;
define axiom k \geq n, n \geq k :- k = n ;
define axiom k \geq k + n :- 0 \geq n ;
define axiom n + 1 \geq k :- n \geq l, l \geq k ;
define axiom k \geq n :- k \geq l, l \geq n + 1 ;
define axiom :- (n + k * l) + k = n + k * (l + 1) ;
define axiom n + k \geq l + n + k + 1 :- ;
define axiom k \geq n + l + m + 1 :- k \geq n ;
