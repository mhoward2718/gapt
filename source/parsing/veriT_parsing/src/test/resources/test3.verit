verit dev - the VERI(T) theorem prover (UFRN/LORIA).
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
success
unsat
success
(set .c1 (input :conclusion ((let ((?v_0 (op e0 e0))(?v_1 (op e0 e1))(?v_2 (op e0 e2))(?v_3 (op e0 e3))(?v_4 (op e0 e4))(?v_5 (op e0 e5))(?v_6 (op e1 e0))(?v_7 (op e1 e1))(?v_8 (op e1 e2))(?v_9 (op e1 e3))(?v_10 (op e1 e4))(?v_11 (op e1 e5))(?v_12 (op e2 e0))(?v_13 (op e2 e1))(?v_14 (op e2 e2))(?v_15 (op e2 e3))(?v_16 (op e2 e4))(?v_17 (op e2 e5))(?v_18 (op e3 e0))(?v_19 (op e3 e1))(?v_20 (op e3 e2))(?v_21 (op e3 e3))(?v_22 (op e3 e4))(?v_23 (op e3 e5))(?v_24 (op e4 e0))(?v_25 (op e4 e1))(?v_26 (op e4 e2))(?v_27 (op e4 e3))(?v_28 (op e4 e4))(?v_29 (op e4 e5))(?v_30 (op e5 e0))(?v_31 (op e5 e1))(?v_32 (op e5 e2))(?v_33 (op e5 e3))(?v_34 (op e5 e4))(?v_35 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (or (or (or (or (or (= ?v_0 e0) (= ?v_0 e1)) (= ?v_0 e2)) (= ?v_0 e3)) (= ?v_0 e4)) (= e5 ?v_0)) (or (or (or (or (or (= e0 ?v_1) (= e1 ?v_1)) (= ?v_1 e2)) (= e3 ?v_1)) (= e4 ?v_1)) (= e5 ?v_1))) (or (or (or (or (or (= ?v_2 e0) (= e1 ?v_2)) (= ?v_2 e2)) (= ?v_2 e3)) (= e4 ?v_2)) (= e5 ?v_2))) (or (or (or (or (or (= ?v_3 e0) (= e1 ?v_3)) (= ?v_3 e2)) (= ?v_3 e3)) (= ?v_3 e4)) (= e5 ?v_3))) (or (or (or (or (or (= e0 ?v_4) (= e1 ?v_4)) (= ?v_4 e2)) (= e3 ?v_4)) (= e4 ?v_4)) (= e5 ?v_4))) (or (or (or (or (or (= e0 ?v_5) (= e1 ?v_5)) (= ?v_5 e2)) (= e3 ?v_5)) (= e4 ?v_5)) (= e5 ?v_5))) (and (and (and (and (and (or (or (or (or (or (= e0 ?v_6) (= e1 ?v_6)) (= ?v_6 e2)) (= e3 ?v_6)) (= e4 ?v_6)) (= e5 ?v_6)) (or (or (or (or (or (= ?v_7 e0) (= e1 ?v_7)) (= ?v_7 e2)) (= e3 ?v_7)) (= e4 ?v_7)) (= e5 ?v_7))) (or (or (or (or (or (= ?v_8 e0) (= e1 ?v_8)) (= ?v_8 e2)) (= ?v_8 e3)) (= ?v_8 e4)) (= e5 ?v_8))) (or (or (or (or (or (= e0 ?v_9) (= e1 ?v_9)) (= e2 ?v_9)) (= e3 ?v_9)) (= e4 ?v_9)) (= e5 ?v_9))) (or (or (or (or (or (= ?v_10 e0) (= ?v_10 e1)) (= ?v_10 e2)) (= ?v_10 e3)) (= ?v_10 e4)) (= ?v_10 e5))) (or (or (or (or (or (= ?v_11 e0) (= ?v_11 e1)) (= ?v_11 e2)) (= ?v_11 e3)) (= ?v_11 e4)) (= e5 ?v_11)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?v_12) (= e1 ?v_12)) (= ?v_12 e2)) (= e3 ?v_12)) (= e4 ?v_12)) (= e5 ?v_12)) (or (or (or (or (or (= e0 ?v_13) (= e1 ?v_13)) (= ?v_13 e2)) (= e3 ?v_13)) (= e4 ?v_13)) (= e5 ?v_13))) (or (or (or (or (or (= e0 ?v_14) (= e1 ?v_14)) (= ?v_14 e2)) (= e3 ?v_14)) (= e4 ?v_14)) (= e5 ?v_14))) (or (or (or (or (or (= e0 ?v_15) (= e1 ?v_15)) (= ?v_15 e2)) (= e3 ?v_15)) (= e4 ?v_15)) (= e5 ?v_15))) (or (or (or (or (or (= e0 ?v_16) (= e1 ?v_16)) (= e2 ?v_16)) (= e3 ?v_16)) (= e4 ?v_16)) (= e5 ?v_16))) (or (or (or (or (or (= e0 ?v_17) (= e1 ?v_17)) (= e2 ?v_17)) (= e3 ?v_17)) (= e4 ?v_17)) (= e5 ?v_17)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?v_18) (= e1 ?v_18)) (= ?v_18 e2)) (= e3 ?v_18)) (= e4 ?v_18)) (= e5 ?v_18)) (or (or (or (or (or (= e0 ?v_19) (= e1 ?v_19)) (= e2 ?v_19)) (= e3 ?v_19)) (= e4 ?v_19)) (= e5 ?v_19))) (or (or (or (or (or (= ?v_20 e0) (= e1 ?v_20)) (= ?v_20 e2)) (= ?v_20 e3)) (= e4 ?v_20)) (= e5 ?v_20))) (or (or (or (or (or (= e0 ?v_21) (= e1 ?v_21)) (= ?v_21 e2)) (= e3 ?v_21)) (= e4 ?v_21)) (= e5 ?v_21))) (or (or (or (or (or (= ?v_22 e0) (= ?v_22 e1)) (= ?v_22 e2)) (= ?v_22 e3)) (= ?v_22 e4)) (= e5 ?v_22))) (or (or (or (or (or (= ?v_23 e0) (= e1 ?v_23)) (= ?v_23 e2)) (= ?v_23 e3)) (= e4 ?v_23)) (= e5 ?v_23)))) (and (and (and (and (and (or (or (or (or (or (= ?v_24 e0) (= e1 ?v_24)) (= ?v_24 e2)) (= ?v_24 e3)) (= e4 ?v_24)) (= e5 ?v_24)) (or (or (or (or (or (= e0 ?v_25) (= e1 ?v_25)) (= e2 ?v_25)) (= e3 ?v_25)) (= e4 ?v_25)) (= e5 ?v_25))) (or (or (or (or (or (= ?v_26 e0) (= ?v_26 e1)) (= ?v_26 e2)) (= ?v_26 e3)) (= ?v_26 e4)) (= ?v_26 e5))) (or (or (or (or (or (= ?v_27 e0) (= e1 ?v_27)) (= ?v_27 e2)) (= ?v_27 e3)) (= e4 ?v_27)) (= e5 ?v_27))) (or (or (or (or (or (= ?v_28 e0) (= e1 ?v_28)) (= ?v_28 e2)) (= ?v_28 e3)) (= e4 ?v_28)) (= e5 ?v_28))) (or (or (or (or (or (= e0 ?v_29) (= e1 ?v_29)) (= ?v_29 e2)) (= e3 ?v_29)) (= e4 ?v_29)) (= e5 ?v_29)))) (and (and (and (and (and (or (or (or (or (or (= ?v_30 e0) (= ?v_30 e1)) (= ?v_30 e2)) (= ?v_30 e3)) (= ?v_30 e4)) (= ?v_30 e5)) (or (or (or (or (or (= ?v_31 e0) (= e1 ?v_31)) (= ?v_31 e2)) (= ?v_31 e3)) (= e4 ?v_31)) (= e5 ?v_31))) (or (or (or (or (or (= e0 ?v_32) (= e1 ?v_32)) (= ?v_32 e2)) (= e3 ?v_32)) (= e4 ?v_32)) (= e5 ?v_32))) (or (or (or (or (or (= ?v_33 e0) (= ?v_33 e1)) (= ?v_33 e2)) (= ?v_33 e3)) (= ?v_33 e4)) (= e5 ?v_33))) (or (or (or (or (or (= ?v_34 e0) (= e1 ?v_34)) (= ?v_34 e2)) (= ?v_34 e3)) (= e4 ?v_34)) (= e5 ?v_34))) (or (or (or (or (or (= ?v_35 e0) (= e1 ?v_35)) (= ?v_35 e2)) (= ?v_35 e3)) (= ?v_35 e4)) (= e5 ?v_35))))))))
(set .c2 (input :conclusion ((and (and (and (and (and (and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))) (and (= (op unit e2) e2) (= (op e2 unit) e2))) (and (= e3 (op unit e3)) (= e3 (op e3 unit)))) (and (= e4 (op unit e4)) (= e4 (op e4 unit)))) (and (= e5 (op unit e5)) (= e5 (op e5 unit)))) (or (or (or (or (or (= e0 unit) (= e1 unit)) (= unit e2)) (= e3 unit)) (= e4 unit)) (= e5 unit))))))
(set .c3 (input :conclusion ((let ((?v_1 (op e0 e0))(?v_7 (op e0 e1))(?v_14 (op e0 e2))(?v_21 (op e0 e3))(?v_28 (op e0 e4))(?v_35 (op e0 e5))(?v_2 (op e1 e0))(?v_9 (op e1 e1))(?v_15 (op e1 e2))(?v_22 (op e1 e3))(?v_29 (op e1 e4))(?v_36 (op e1 e5))(?v_3 (op e2 e0))(?v_10 (op e2 e1))(?v_17 (op e2 e2))(?v_23 (op e2 e3))(?v_30 (op e2 e4))(?v_37 (op e2 e5))(?v_4 (op e3 e0))(?v_11 (op e3 e1))(?v_18 (op e3 e2))(?v_25 (op e3 e3))(?v_31 (op e3 e4))(?v_38 (op e3 e5))(?v_5 (op e4 e0))(?v_12 (op e4 e1))(?v_19 (op e4 e2))(?v_26 (op e4 e3))(?v_33 (op e4 e4))(?v_39 (op e4 e5))(?v_6 (op e5 e0))(?v_13 (op e5 e1))(?v_20 (op e5 e2))(?v_27 (op e5 e3))(?v_34 (op e5 e4))(?v_41 (op e5 e5))) (let ((?v_0 (= e0 (op e0 ?v_1)))(?v_8 (= e1 (op e1 ?v_9)))(?v_16 (= e2 (op e2 ?v_17)))(?v_24 (= (op e3 ?v_25) e3))(?v_32 (= e4 (op e4 ?v_33)))(?v_40 (= e5 (op e5 ?v_41)))) (and (or (or (or (or (or (and ?v_0 (not (= e0 unit))) (and ?v_8 (not (= e1 unit)))) (and ?v_16 (not (= unit e2)))) (and ?v_24 (not (= e3 unit)))) (and ?v_32 (not (= e4 unit)))) (and ?v_40 (not (= e5 unit)))) (or (or (or (or (or (and (and (and (and (and (or (not ?v_0) (= unit ?v_1)) (or (not (= e0 (op e1 ?v_2))) (= ?v_2 unit))) (or (not (= e0 (op e2 ?v_3))) (= ?v_3 unit))) (or (not (= e0 (op e3 ?v_4))) (= ?v_4 unit))) (or (not (= (op e4 ?v_5) e0)) (= ?v_5 unit))) (or (not (= (op e5 ?v_6) e0)) (= ?v_6 unit))) (and (and (and (and (and (or (not (= (op e0 ?v_7) e1)) (= ?v_7 unit)) (or (not ?v_8) (= unit ?v_9))) (or (not (= e1 (op e2 ?v_10))) (= ?v_10 unit))) (or (not (= e1 (op e3 ?v_11))) (= ?v_11 unit))) (or (not (= e1 (op e4 ?v_12))) (= unit ?v_12))) (or (not (= e1 (op e5 ?v_13))) (= unit ?v_13)))) (and (and (and (and (and (or (not (= e2 (op e0 ?v_14))) (= unit ?v_14)) (or (not (= (op e1 ?v_15) e2)) (= unit ?v_15))) (or (not ?v_16) (= unit ?v_17))) (or (not (= (op e3 ?v_18) e2)) (= unit ?v_18))) (or (not (= (op e4 ?v_19) e2)) (= unit ?v_19))) (or (not (= (op e5 ?v_20) e2)) (= ?v_20 unit)))) (and (and (and (and (and (or (not (= e3 (op e0 ?v_21))) (= ?v_21 unit)) (or (not (= (op e1 ?v_22) e3)) (= ?v_22 unit))) (or (not (= e3 (op e2 ?v_23))) (= ?v_23 unit))) (or (not ?v_24) (= unit ?v_25))) (or (not (= (op e4 ?v_26) e3)) (= ?v_26 unit))) (or (not (= (op e5 ?v_27) e3)) (= ?v_27 unit)))) (and (and (and (and (and (or (not (= e4 (op e0 ?v_28))) (= ?v_28 unit)) (or (not (= e4 (op e1 ?v_29))) (= ?v_29 unit))) (or (not (= e4 (op e2 ?v_30))) (= ?v_30 unit))) (or (not (= e4 (op e3 ?v_31))) (= ?v_31 unit))) (or (not ?v_32) (= ?v_33 unit))) (or (not (= e4 (op e5 ?v_34))) (= ?v_34 unit)))) (and (and (and (and (and (or (not (= e5 (op e0 ?v_35))) (= ?v_35 unit)) (or (not (= e5 (op e1 ?v_36))) (= ?v_36 unit))) (or (not (= e5 (op e2 ?v_37))) (= ?v_37 unit))) (or (not (= e5 (op e3 ?v_38))) (= ?v_38 unit))) (or (not (= e5 (op e4 ?v_39))) (= ?v_39 unit))) (or (not ?v_40) (= unit ?v_41))))))))))
(set .c4 (input :conclusion ((= e0 unit))))
(set .c5 (input :conclusion ((let ((?v_0 (op e0 e0))(?v_6 (op e0 e1))(?v_12 (op e0 e2))(?v_18 (op e0 e3))(?v_24 (op e0 e4))(?v_30 (op e0 e5))(?v_1 (op e1 e0))(?v_7 (op e1 e1))(?v_13 (op e1 e2))(?v_19 (op e1 e3))(?v_25 (op e1 e4))(?v_31 (op e1 e5))(?v_2 (op e2 e0))(?v_8 (op e2 e1))(?v_14 (op e2 e2))(?v_20 (op e2 e3))(?v_26 (op e2 e4))(?v_32 (op e2 e5))(?v_3 (op e3 e0))(?v_9 (op e3 e1))(?v_15 (op e3 e2))(?v_21 (op e3 e3))(?v_27 (op e3 e4))(?v_33 (op e3 e5))(?v_4 (op e4 e0))(?v_10 (op e4 e1))(?v_16 (op e4 e2))(?v_22 (op e4 e3))(?v_28 (op e4 e4))(?v_34 (op e4 e5))(?v_5 (op e5 e0))(?v_11 (op e5 e1))(?v_17 (op e5 e2))(?v_23 (op e5 e3))(?v_29 (op e5 e4))(?v_35 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_0 ?v_1)) (not (= ?v_0 ?v_2))) (not (= ?v_0 ?v_3))) (not (= ?v_0 ?v_4))) (not (= ?v_0 ?v_5))) (not (= ?v_2 ?v_1))) (not (= ?v_3 ?v_1))) (not (= ?v_4 ?v_1))) (not (= ?v_5 ?v_1))) (not (= ?v_3 ?v_2))) (not (= ?v_2 ?v_4))) (not (= ?v_2 ?v_5))) (not (= ?v_3 ?v_4))) (not (= ?v_3 ?v_5))) (not (= ?v_5 ?v_4))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_7 ?v_6)) (not (= ?v_8 ?v_6))) (not (= ?v_6 ?v_9))) (not (= ?v_10 ?v_6))) (not (= ?v_11 ?v_6))) (not (= ?v_8 ?v_7))) (not (= ?v_7 ?v_9))) (not (= ?v_10 ?v_7))) (not (= ?v_11 ?v_7))) (not (= ?v_8 ?v_9))) (not (= ?v_10 ?v_8))) (not (= ?v_11 ?v_8))) (not (= ?v_10 ?v_9))) (not (= ?v_11 ?v_9))) (not (= ?v_10 ?v_11)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_13 ?v_12)) (not (= ?v_14 ?v_12))) (not (= ?v_15 ?v_12))) (not (= ?v_12 ?v_16))) (not (= ?v_12 ?v_17))) (not (= ?v_14 ?v_13))) (not (= ?v_13 ?v_15))) (not (= ?v_13 ?v_16))) (not (= ?v_13 ?v_17))) (not (= ?v_14 ?v_15))) (not (= ?v_14 ?v_16))) (not (= ?v_14 ?v_17))) (not (= ?v_15 ?v_16))) (not (= ?v_15 ?v_17))) (not (= ?v_17 ?v_16)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_18 ?v_19)) (not (= ?v_20 ?v_18))) (not (= ?v_21 ?v_18))) (not (= ?v_22 ?v_18))) (not (= ?v_23 ?v_18))) (not (= ?v_20 ?v_19))) (not (= ?v_21 ?v_19))) (not (= ?v_22 ?v_19))) (not (= ?v_23 ?v_19))) (not (= ?v_20 ?v_21))) (not (= ?v_22 ?v_20))) (not (= ?v_23 ?v_20))) (not (= ?v_22 ?v_21))) (not (= ?v_23 ?v_21))) (not (= ?v_22 ?v_23)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_24 ?v_25)) (not (= ?v_26 ?v_24))) (not (= ?v_24 ?v_27))) (not (= ?v_28 ?v_24))) (not (= ?v_24 ?v_29))) (not (= ?v_26 ?v_25))) (not (= ?v_27 ?v_25))) (not (= ?v_28 ?v_25))) (not (= ?v_29 ?v_25))) (not (= ?v_26 ?v_27))) (not (= ?v_26 ?v_28))) (not (= ?v_26 ?v_29))) (not (= ?v_28 ?v_27))) (not (= ?v_27 ?v_29))) (not (= ?v_28 ?v_29)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_30 ?v_31)) (not (= ?v_30 ?v_32))) (not (= ?v_30 ?v_33))) (not (= ?v_30 ?v_34))) (not (= ?v_30 ?v_35))) (not (= ?v_31 ?v_32))) (not (= ?v_33 ?v_31))) (not (= ?v_34 ?v_31))) (not (= ?v_35 ?v_31))) (not (= ?v_33 ?v_32))) (not (= ?v_34 ?v_32))) (not (= ?v_35 ?v_32))) (not (= ?v_33 ?v_34))) (not (= ?v_33 ?v_35))) (not (= ?v_35 ?v_34)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_0 ?v_6)) (not (= ?v_0 ?v_12))) (not (= ?v_0 ?v_18))) (not (= ?v_0 ?v_24))) (not (= ?v_30 ?v_0))) (not (= ?v_6 ?v_12))) (not (= ?v_6 ?v_18))) (not (= ?v_24 ?v_6))) (not (= ?v_30 ?v_6))) (not (= ?v_12 ?v_18))) (not (= ?v_24 ?v_12))) (not (= ?v_30 ?v_12))) (not (= ?v_24 ?v_18))) (not (= ?v_30 ?v_18))) (not (= ?v_30 ?v_24))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_7 ?v_1)) (not (= ?v_1 ?v_13))) (not (= ?v_1 ?v_19))) (not (= ?v_1 ?v_25))) (not (= ?v_31 ?v_1))) (not (= ?v_7 ?v_13))) (not (= ?v_7 ?v_19))) (not (= ?v_7 ?v_25))) (not (= ?v_31 ?v_7))) (not (= ?v_13 ?v_19))) (not (= ?v_13 ?v_25))) (not (= ?v_31 ?v_13))) (not (= ?v_25 ?v_19))) (not (= ?v_31 ?v_19))) (not (= ?v_31 ?v_25)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_8 ?v_2)) (not (= ?v_2 ?v_14))) (not (= ?v_2 ?v_20))) (not (= ?v_26 ?v_2))) (not (= ?v_2 ?v_32))) (not (= ?v_8 ?v_14))) (not (= ?v_8 ?v_20))) (not (= ?v_26 ?v_8))) (not (= ?v_8 ?v_32))) (not (= ?v_20 ?v_14))) (not (= ?v_26 ?v_14))) (not (= ?v_32 ?v_14))) (not (= ?v_26 ?v_20))) (not (= ?v_20 ?v_32))) (not (= ?v_26 ?v_32)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_3 ?v_9)) (not (= ?v_3 ?v_15))) (not (= ?v_3 ?v_21))) (not (= ?v_3 ?v_27))) (not (= ?v_33 ?v_3))) (not (= ?v_15 ?v_9))) (not (= ?v_21 ?v_9))) (not (= ?v_27 ?v_9))) (not (= ?v_33 ?v_9))) (not (= ?v_21 ?v_15))) (not (= ?v_27 ?v_15))) (not (= ?v_33 ?v_15))) (not (= ?v_27 ?v_21))) (not (= ?v_33 ?v_21))) (not (= ?v_33 ?v_27)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_10 ?v_4)) (not (= ?v_4 ?v_16))) (not (= ?v_22 ?v_4))) (not (= ?v_28 ?v_4))) (not (= ?v_34 ?v_4))) (not (= ?v_10 ?v_16))) (not (= ?v_10 ?v_22))) (not (= ?v_10 ?v_28))) (not (= ?v_10 ?v_34))) (not (= ?v_22 ?v_16))) (not (= ?v_28 ?v_16))) (not (= ?v_34 ?v_16))) (not (= ?v_22 ?v_28))) (not (= ?v_22 ?v_34))) (not (= ?v_34 ?v_28)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?v_11 ?v_5)) (not (= ?v_5 ?v_17))) (not (= ?v_23 ?v_5))) (not (= ?v_5 ?v_29))) (not (= ?v_35 ?v_5))) (not (= ?v_11 ?v_17))) (not (= ?v_11 ?v_23))) (not (= ?v_11 ?v_29))) (not (= ?v_11 ?v_35))) (not (= ?v_23 ?v_17))) (not (= ?v_29 ?v_17))) (not (= ?v_35 ?v_17))) (not (= ?v_23 ?v_29))) (not (= ?v_35 ?v_23))) (not (= ?v_35 ?v_29)))))))))
(set .c6 (tmp_alphaconv :clauses (.c1) :conclusion ((let ((?veriT__1 (op e0 e0))(?veriT__2 (op e0 e1))(?veriT__3 (op e0 e2))(?veriT__4 (op e0 e3))(?veriT__5 (op e0 e4))(?veriT__6 (op e0 e5))(?veriT__7 (op e1 e0))(?veriT__8 (op e1 e1))(?veriT__9 (op e1 e2))(?veriT__10 (op e1 e3))(?veriT__11 (op e1 e4))(?veriT__12 (op e1 e5))(?veriT__13 (op e2 e0))(?veriT__14 (op e2 e1))(?veriT__15 (op e2 e2))(?veriT__16 (op e2 e3))(?veriT__17 (op e2 e4))(?veriT__18 (op e2 e5))(?veriT__19 (op e3 e0))(?veriT__20 (op e3 e1))(?veriT__21 (op e3 e2))(?veriT__22 (op e3 e3))(?veriT__23 (op e3 e4))(?veriT__24 (op e3 e5))(?veriT__25 (op e4 e0))(?veriT__26 (op e4 e1))(?veriT__27 (op e4 e2))(?veriT__28 (op e4 e3))(?veriT__29 (op e4 e4))(?veriT__30 (op e4 e5))(?veriT__31 (op e5 e0))(?veriT__32 (op e5 e1))(?veriT__33 (op e5 e2))(?veriT__34 (op e5 e3))(?veriT__35 (op e5 e4))(?veriT__36 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (or (or (or (or (or (= ?veriT__1 e0) (= e1 ?veriT__1)) (= ?veriT__1 e2)) (= ?veriT__1 e3)) (= e4 ?veriT__1)) (= e5 ?veriT__1)) (or (or (or (or (or (= e0 ?veriT__2) (= e1 ?veriT__2)) (= ?veriT__2 e2)) (= e3 ?veriT__2)) (= e4 ?veriT__2)) (= e5 ?veriT__2))) (or (or (or (or (or (= ?veriT__3 e0) (= e1 ?veriT__3)) (= ?veriT__3 e2)) (= ?veriT__3 e3)) (= e4 ?veriT__3)) (= e5 ?veriT__3))) (or (or (or (or (or (= e0 ?veriT__4) (= e1 ?veriT__4)) (= e2 ?veriT__4)) (= e3 ?veriT__4)) (= e4 ?veriT__4)) (= e5 ?veriT__4))) (or (or (or (or (or (= e0 ?veriT__5) (= e1 ?veriT__5)) (= ?veriT__5 e2)) (= e3 ?veriT__5)) (= e4 ?veriT__5)) (= e5 ?veriT__5))) (or (or (or (or (or (= e0 ?veriT__6) (= e1 ?veriT__6)) (= ?veriT__6 e2)) (= e3 ?veriT__6)) (= e4 ?veriT__6)) (= e5 ?veriT__6))) (and (and (and (and (and (or (or (or (or (or (= e0 ?veriT__7) (= e1 ?veriT__7)) (= e2 ?veriT__7)) (= e3 ?veriT__7)) (= e4 ?veriT__7)) (= e5 ?veriT__7)) (or (or (or (or (or (= e0 ?veriT__8) (= e1 ?veriT__8)) (= ?veriT__8 e2)) (= e3 ?veriT__8)) (= e4 ?veriT__8)) (= e5 ?veriT__8))) (or (or (or (or (or (= e0 ?veriT__9) (= e1 ?veriT__9)) (= ?veriT__9 e2)) (= e3 ?veriT__9)) (= e4 ?veriT__9)) (= e5 ?veriT__9))) (or (or (or (or (or (= e0 ?veriT__10) (= e1 ?veriT__10)) (= ?veriT__10 e2)) (= e3 ?veriT__10)) (= e4 ?veriT__10)) (= e5 ?veriT__10))) (or (or (or (or (or (= e0 ?veriT__11) (= e1 ?veriT__11)) (= ?veriT__11 e2)) (= e3 ?veriT__11)) (= e4 ?veriT__11)) (= e5 ?veriT__11))) (or (or (or (or (or (= ?veriT__12 e0) (= e1 ?veriT__12)) (= ?veriT__12 e2)) (= ?veriT__12 e3)) (= e4 ?veriT__12)) (= e5 ?veriT__12)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?veriT__13) (= e1 ?veriT__13)) (= ?veriT__13 e2)) (= e3 ?veriT__13)) (= e4 ?veriT__13)) (= e5 ?veriT__13)) (or (or (or (or (or (= ?veriT__14 e0) (= ?veriT__14 e1)) (= ?veriT__14 e2)) (= ?veriT__14 e3)) (= ?veriT__14 e4)) (= ?veriT__14 e5))) (or (or (or (or (or (= ?veriT__15 e0) (= e1 ?veriT__15)) (= ?veriT__15 e2)) (= ?veriT__15 e3)) (= e4 ?veriT__15)) (= e5 ?veriT__15))) (or (or (or (or (or (= ?veriT__16 e0) (= e1 ?veriT__16)) (= ?veriT__16 e2)) (= ?veriT__16 e3)) (= e4 ?veriT__16)) (= e5 ?veriT__16))) (or (or (or (or (or (= ?veriT__17 e0) (= ?veriT__17 e1)) (= ?veriT__17 e2)) (= ?veriT__17 e3)) (= ?veriT__17 e4)) (= ?veriT__17 e5))) (or (or (or (or (or (= ?veriT__18 e0) (= e1 ?veriT__18)) (= ?veriT__18 e2)) (= ?veriT__18 e3)) (= e4 ?veriT__18)) (= e5 ?veriT__18)))) (and (and (and (and (and (or (or (or (or (or (= ?veriT__19 e0) (= e1 ?veriT__19)) (= ?veriT__19 e2)) (= ?veriT__19 e3)) (= e4 ?veriT__19)) (= e5 ?veriT__19)) (or (or (or (or (or (= e0 ?veriT__20) (= e1 ?veriT__20)) (= ?veriT__20 e2)) (= e3 ?veriT__20)) (= e4 ?veriT__20)) (= e5 ?veriT__20))) (or (or (or (or (or (= e0 ?veriT__21) (= e1 ?veriT__21)) (= ?veriT__21 e2)) (= e3 ?veriT__21)) (= e4 ?veriT__21)) (= e5 ?veriT__21))) (or (or (or (or (or (= e0 ?veriT__22) (= e1 ?veriT__22)) (= e2 ?veriT__22)) (= e3 ?veriT__22)) (= e4 ?veriT__22)) (= e5 ?veriT__22))) (or (or (or (or (or (= e0 ?veriT__23) (= e1 ?veriT__23)) (= ?veriT__23 e2)) (= e3 ?veriT__23)) (= e4 ?veriT__23)) (= e5 ?veriT__23))) (or (or (or (or (or (= e0 ?veriT__24) (= e1 ?veriT__24)) (= ?veriT__24 e2)) (= e3 ?veriT__24)) (= e4 ?veriT__24)) (= e5 ?veriT__24)))) (and (and (and (and (and (or (or (or (or (or (= ?veriT__25 e0) (= e1 ?veriT__25)) (= ?veriT__25 e2)) (= e3 ?veriT__25)) (= e4 ?veriT__25)) (= e5 ?veriT__25)) (or (or (or (or (or (= ?veriT__26 e0) (= e1 ?veriT__26)) (= ?veriT__26 e2)) (= ?veriT__26 e3)) (= e4 ?veriT__26)) (= e5 ?veriT__26))) (or (or (or (or (or (= e0 ?veriT__27) (= e1 ?veriT__27)) (= ?veriT__27 e2)) (= e3 ?veriT__27)) (= e4 ?veriT__27)) (= e5 ?veriT__27))) (or (or (or (or (or (= e0 ?veriT__28) (= e1 ?veriT__28)) (= ?veriT__28 e2)) (= e3 ?veriT__28)) (= e4 ?veriT__28)) (= e5 ?veriT__28))) (or (or (or (or (or (= e0 ?veriT__29) (= e1 ?veriT__29)) (= ?veriT__29 e2)) (= e3 ?veriT__29)) (= e4 ?veriT__29)) (= e5 ?veriT__29))) (or (or (or (or (or (= ?veriT__30 e0) (= ?veriT__30 e1)) (= ?veriT__30 e2)) (= ?veriT__30 e3)) (= ?veriT__30 e4)) (= ?veriT__30 e5)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?veriT__31) (= e1 ?veriT__31)) (= ?veriT__31 e2)) (= e3 ?veriT__31)) (= e4 ?veriT__31)) (= e5 ?veriT__31)) (or (or (or (or (or (= e0 ?veriT__32) (= e1 ?veriT__32)) (= ?veriT__32 e2)) (= e3 ?veriT__32)) (= e4 ?veriT__32)) (= e5 ?veriT__32))) (or (or (or (or (or (= e0 ?veriT__33) (= e1 ?veriT__33)) (= ?veriT__33 e2)) (= e3 ?veriT__33)) (= e4 ?veriT__33)) (= e5 ?veriT__33))) (or (or (or (or (or (= ?veriT__34 e0) (= e1 ?veriT__34)) (= ?veriT__34 e2)) (= ?veriT__34 e3)) (= ?veriT__34 e4)) (= e5 ?veriT__34))) (or (or (or (or (or (= e0 ?veriT__35) (= e1 ?veriT__35)) (= e2 ?veriT__35)) (= e3 ?veriT__35)) (= e4 ?veriT__35)) (= e5 ?veriT__35))) (or (or (or (or (or (= e0 ?veriT__36) (= e1 ?veriT__36)) (= ?veriT__36 e2)) (= e3 ?veriT__36)) (= e4 ?veriT__36)) (= e5 ?veriT__36))))))))
(set .c7 (tmp_alphaconv :clauses (.c3) :conclusion ((let ((?veriT__397 (op e0 e0))(?veriT__398 (op e0 e1))(?veriT__399 (op e0 e2))(?veriT__400 (op e0 e3))(?veriT__401 (op e0 e4))(?veriT__402 (op e0 e5))(?veriT__403 (op e1 e0))(?veriT__404 (op e1 e1))(?veriT__405 (op e1 e2))(?veriT__406 (op e1 e3))(?veriT__407 (op e1 e4))(?veriT__408 (op e1 e5))(?veriT__409 (op e2 e0))(?veriT__410 (op e2 e1))(?veriT__411 (op e2 e2))(?veriT__412 (op e2 e3))(?veriT__413 (op e2 e4))(?veriT__414 (op e2 e5))(?veriT__415 (op e3 e0))(?veriT__416 (op e3 e1))(?veriT__417 (op e3 e2))(?veriT__418 (op e3 e3))(?veriT__419 (op e3 e4))(?veriT__420 (op e3 e5))(?veriT__421 (op e4 e0))(?veriT__422 (op e4 e1))(?veriT__423 (op e4 e2))(?veriT__424 (op e4 e3))(?veriT__425 (op e4 e4))(?veriT__426 (op e4 e5))(?veriT__427 (op e5 e0))(?veriT__428 (op e5 e1))(?veriT__429 (op e5 e2))(?veriT__430 (op e5 e3))(?veriT__431 (op e5 e4))(?veriT__432 (op e5 e5))) (let ((?veriT__433 (= e0 (op e0 ?veriT__397)))(?veriT__434 (= e1 (op e1 ?veriT__404)))(?veriT__435 (= e2 (op e2 ?veriT__411)))(?veriT__436 (= e3 (op e3 ?veriT__418)))(?veriT__437 (= e4 (op e4 ?veriT__425)))(?veriT__438 (= e5 (op e5 ?veriT__432)))) (and (or (or (or (or (or (and ?veriT__433 (not (= e0 unit))) (and ?veriT__434 (not (= e1 unit)))) (and ?veriT__435 (not (= unit e2)))) (and ?veriT__436 (not (= e3 unit)))) (and ?veriT__437 (not (= e4 unit)))) (and ?veriT__438 (not (= e5 unit)))) (or (or (or (or (or (and (and (and (and (and (or (not ?veriT__433) (= ?veriT__397 unit)) (or (not (= e0 (op e1 ?veriT__403))) (= ?veriT__403 unit))) (or (not (= (op e2 ?veriT__409) e0)) (= unit ?veriT__409))) (or (not (= e0 (op e3 ?veriT__415))) (= ?veriT__415 unit))) (or (not (= (op e4 ?veriT__421) e0)) (= ?veriT__421 unit))) (or (not (= e0 (op e5 ?veriT__427))) (= ?veriT__427 unit))) (and (and (and (and (and (or (not (= e1 (op e0 ?veriT__398))) (= ?veriT__398 unit)) (or (not ?veriT__434) (= ?veriT__404 unit))) (or (not (= (op e2 ?veriT__410) e1)) (= ?veriT__410 unit))) (or (not (= e1 (op e3 ?veriT__416))) (= ?veriT__416 unit))) (or (not (= e1 (op e4 ?veriT__422))) (= ?veriT__422 unit))) (or (not (= e1 (op e5 ?veriT__428))) (= unit ?veriT__428)))) (and (and (and (and (and (or (not (= (op e0 ?veriT__399) e2)) (= unit ?veriT__399)) (or (not (= e2 (op e1 ?veriT__405))) (= ?veriT__405 unit))) (or (not ?veriT__435) (= ?veriT__411 unit))) (or (not (= e2 (op e3 ?veriT__417))) (= unit ?veriT__417))) (or (not (= (op e4 ?veriT__423) e2)) (= unit ?veriT__423))) (or (not (= (op e5 ?veriT__429) e2)) (= ?veriT__429 unit)))) (and (and (and (and (and (or (not (= (op e0 ?veriT__400) e3)) (= ?veriT__400 unit)) (or (not (= (op e1 ?veriT__406) e3)) (= ?veriT__406 unit))) (or (not (= (op e2 ?veriT__412) e3)) (= unit ?veriT__412))) (or (not ?veriT__436) (= ?veriT__418 unit))) (or (not (= (op e4 ?veriT__424) e3)) (= ?veriT__424 unit))) (or (not (= (op e5 ?veriT__430) e3)) (= ?veriT__430 unit)))) (and (and (and (and (and (or (not (= e4 (op e0 ?veriT__401))) (= ?veriT__401 unit)) (or (not (= e4 (op e1 ?veriT__407))) (= ?veriT__407 unit))) (or (not (= e4 (op e2 ?veriT__413))) (= ?veriT__413 unit))) (or (not (= e4 (op e3 ?veriT__419))) (= unit ?veriT__419))) (or (not ?veriT__437) (= unit ?veriT__425))) (or (not (= (op e5 ?veriT__431) e4)) (= unit ?veriT__431)))) (and (and (and (and (and (or (not (= e5 (op e0 ?veriT__402))) (= unit ?veriT__402)) (or (not (= e5 (op e1 ?veriT__408))) (= unit ?veriT__408))) (or (not (= e5 (op e2 ?veriT__414))) (= ?veriT__414 unit))) (or (not (= e5 (op e3 ?veriT__420))) (= ?veriT__420 unit))) (or (not (= e5 (op e4 ?veriT__426))) (= ?veriT__426 unit))) (or (not ?veriT__438) (= ?veriT__432 unit))))))))))
(set .c8 (tmp_alphaconv :clauses (.c5) :conclusion ((let ((?veriT__439 (op e0 e0))(?veriT__440 (op e0 e1))(?veriT__441 (op e0 e2))(?veriT__442 (op e0 e3))(?veriT__443 (op e0 e4))(?veriT__444 (op e0 e5))(?veriT__445 (op e1 e0))(?veriT__446 (op e1 e1))(?veriT__447 (op e1 e2))(?veriT__448 (op e1 e3))(?veriT__449 (op e1 e4))(?veriT__450 (op e1 e5))(?veriT__451 (op e2 e0))(?veriT__452 (op e2 e1))(?veriT__453 (op e2 e2))(?veriT__454 (op e2 e3))(?veriT__455 (op e2 e4))(?veriT__456 (op e2 e5))(?veriT__457 (op e3 e0))(?veriT__458 (op e3 e1))(?veriT__459 (op e3 e2))(?veriT__460 (op e3 e3))(?veriT__461 (op e3 e4))(?veriT__462 (op e3 e5))(?veriT__463 (op e4 e0))(?veriT__464 (op e4 e1))(?veriT__465 (op e4 e2))(?veriT__466 (op e4 e3))(?veriT__467 (op e4 e4))(?veriT__468 (op e4 e5))(?veriT__469 (op e5 e0))(?veriT__470 (op e5 e1))(?veriT__471 (op e5 e2))(?veriT__472 (op e5 e3))(?veriT__473 (op e5 e4))(?veriT__474 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__439 ?veriT__445)) (not (= ?veriT__451 ?veriT__439))) (not (= ?veriT__439 ?veriT__457))) (not (= ?veriT__463 ?veriT__439))) (not (= ?veriT__439 ?veriT__469))) (not (= ?veriT__451 ?veriT__445))) (not (= ?veriT__445 ?veriT__457))) (not (= ?veriT__463 ?veriT__445))) (not (= ?veriT__469 ?veriT__445))) (not (= ?veriT__451 ?veriT__457))) (not (= ?veriT__463 ?veriT__451))) (not (= ?veriT__451 ?veriT__469))) (not (= ?veriT__463 ?veriT__457))) (not (= ?veriT__469 ?veriT__457))) (not (= ?veriT__463 ?veriT__469))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__446 ?veriT__440)) (not (= ?veriT__452 ?veriT__440))) (not (= ?veriT__458 ?veriT__440))) (not (= ?veriT__464 ?veriT__440))) (not (= ?veriT__470 ?veriT__440))) (not (= ?veriT__452 ?veriT__446))) (not (= ?veriT__446 ?veriT__458))) (not (= ?veriT__464 ?veriT__446))) (not (= ?veriT__470 ?veriT__446))) (not (= ?veriT__452 ?veriT__458))) (not (= ?veriT__464 ?veriT__452))) (not (= ?veriT__470 ?veriT__452))) (not (= ?veriT__464 ?veriT__458))) (not (= ?veriT__470 ?veriT__458))) (not (= ?veriT__470 ?veriT__464)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__447 ?veriT__441)) (not (= ?veriT__453 ?veriT__441))) (not (= ?veriT__459 ?veriT__441))) (not (= ?veriT__465 ?veriT__441))) (not (= ?veriT__471 ?veriT__441))) (not (= ?veriT__447 ?veriT__453))) (not (= ?veriT__459 ?veriT__447))) (not (= ?veriT__447 ?veriT__465))) (not (= ?veriT__471 ?veriT__447))) (not (= ?veriT__459 ?veriT__453))) (not (= ?veriT__453 ?veriT__465))) (not (= ?veriT__471 ?veriT__453))) (not (= ?veriT__459 ?veriT__465))) (not (= ?veriT__459 ?veriT__471))) (not (= ?veriT__471 ?veriT__465)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__442 ?veriT__448)) (not (= ?veriT__442 ?veriT__454))) (not (= ?veriT__442 ?veriT__460))) (not (= ?veriT__442 ?veriT__466))) (not (= ?veriT__442 ?veriT__472))) (not (= ?veriT__448 ?veriT__454))) (not (= ?veriT__448 ?veriT__460))) (not (= ?veriT__448 ?veriT__466))) (not (= ?veriT__472 ?veriT__448))) (not (= ?veriT__454 ?veriT__460))) (not (= ?veriT__466 ?veriT__454))) (not (= ?veriT__472 ?veriT__454))) (not (= ?veriT__466 ?veriT__460))) (not (= ?veriT__472 ?veriT__460))) (not (= ?veriT__472 ?veriT__466)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__449 ?veriT__443)) (not (= ?veriT__455 ?veriT__443))) (not (= ?veriT__443 ?veriT__461))) (not (= ?veriT__443 ?veriT__467))) (not (= ?veriT__473 ?veriT__443))) (not (= ?veriT__455 ?veriT__449))) (not (= ?veriT__449 ?veriT__461))) (not (= ?veriT__449 ?veriT__467))) (not (= ?veriT__449 ?veriT__473))) (not (= ?veriT__455 ?veriT__461))) (not (= ?veriT__455 ?veriT__467))) (not (= ?veriT__455 ?veriT__473))) (not (= ?veriT__461 ?veriT__467))) (not (= ?veriT__473 ?veriT__461))) (not (= ?veriT__473 ?veriT__467)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__444 ?veriT__450)) (not (= ?veriT__444 ?veriT__456))) (not (= ?veriT__444 ?veriT__462))) (not (= ?veriT__444 ?veriT__468))) (not (= ?veriT__444 ?veriT__474))) (not (= ?veriT__450 ?veriT__456))) (not (= ?veriT__450 ?veriT__462))) (not (= ?veriT__450 ?veriT__468))) (not (= ?veriT__450 ?veriT__474))) (not (= ?veriT__456 ?veriT__462))) (not (= ?veriT__468 ?veriT__456))) (not (= ?veriT__474 ?veriT__456))) (not (= ?veriT__468 ?veriT__462))) (not (= ?veriT__474 ?veriT__462))) (not (= ?veriT__474 ?veriT__468)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__439 ?veriT__440)) (not (= ?veriT__439 ?veriT__441))) (not (= ?veriT__442 ?veriT__439))) (not (= ?veriT__439 ?veriT__443))) (not (= ?veriT__444 ?veriT__439))) (not (= ?veriT__440 ?veriT__441))) (not (= ?veriT__442 ?veriT__440))) (not (= ?veriT__443 ?veriT__440))) (not (= ?veriT__444 ?veriT__440))) (not (= ?veriT__442 ?veriT__441))) (not (= ?veriT__443 ?veriT__441))) (not (= ?veriT__444 ?veriT__441))) (not (= ?veriT__442 ?veriT__443))) (not (= ?veriT__442 ?veriT__444))) (not (= ?veriT__444 ?veriT__443))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__446 ?veriT__445)) (not (= ?veriT__447 ?veriT__445))) (not (= ?veriT__448 ?veriT__445))) (not (= ?veriT__449 ?veriT__445))) (not (= ?veriT__450 ?veriT__445))) (not (= ?veriT__447 ?veriT__446))) (not (= ?veriT__448 ?veriT__446))) (not (= ?veriT__449 ?veriT__446))) (not (= ?veriT__450 ?veriT__446))) (not (= ?veriT__447 ?veriT__448))) (not (= ?veriT__449 ?veriT__447))) (not (= ?veriT__447 ?veriT__450))) (not (= ?veriT__449 ?veriT__448))) (not (= ?veriT__450 ?veriT__448))) (not (= ?veriT__449 ?veriT__450)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__452 ?veriT__451)) (not (= ?veriT__453 ?veriT__451))) (not (= ?veriT__451 ?veriT__454))) (not (= ?veriT__455 ?veriT__451))) (not (= ?veriT__451 ?veriT__456))) (not (= ?veriT__453 ?veriT__452))) (not (= ?veriT__452 ?veriT__454))) (not (= ?veriT__455 ?veriT__452))) (not (= ?veriT__452 ?veriT__456))) (not (= ?veriT__453 ?veriT__454))) (not (= ?veriT__455 ?veriT__453))) (not (= ?veriT__453 ?veriT__456))) (not (= ?veriT__455 ?veriT__454))) (not (= ?veriT__456 ?veriT__454))) (not (= ?veriT__455 ?veriT__456)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__458 ?veriT__457)) (not (= ?veriT__459 ?veriT__457))) (not (= ?veriT__457 ?veriT__460))) (not (= ?veriT__461 ?veriT__457))) (not (= ?veriT__462 ?veriT__457))) (not (= ?veriT__459 ?veriT__458))) (not (= ?veriT__458 ?veriT__460))) (not (= ?veriT__461 ?veriT__458))) (not (= ?veriT__458 ?veriT__462))) (not (= ?veriT__459 ?veriT__460))) (not (= ?veriT__459 ?veriT__461))) (not (= ?veriT__459 ?veriT__462))) (not (= ?veriT__461 ?veriT__460))) (not (= ?veriT__462 ?veriT__460))) (not (= ?veriT__461 ?veriT__462)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__464 ?veriT__463)) (not (= ?veriT__463 ?veriT__465))) (not (= ?veriT__463 ?veriT__466))) (not (= ?veriT__463 ?veriT__467))) (not (= ?veriT__463 ?veriT__468))) (not (= ?veriT__464 ?veriT__465))) (not (= ?veriT__464 ?veriT__466))) (not (= ?veriT__464 ?veriT__467))) (not (= ?veriT__464 ?veriT__468))) (not (= ?veriT__465 ?veriT__466))) (not (= ?veriT__465 ?veriT__467))) (not (= ?veriT__465 ?veriT__468))) (not (= ?veriT__466 ?veriT__467))) (not (= ?veriT__468 ?veriT__466))) (not (= ?veriT__468 ?veriT__467)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__470 ?veriT__469)) (not (= ?veriT__471 ?veriT__469))) (not (= ?veriT__472 ?veriT__469))) (not (= ?veriT__473 ?veriT__469))) (not (= ?veriT__474 ?veriT__469))) (not (= ?veriT__470 ?veriT__471))) (not (= ?veriT__472 ?veriT__470))) (not (= ?veriT__470 ?veriT__473))) (not (= ?veriT__470 ?veriT__474))) (not (= ?veriT__472 ?veriT__471))) (not (= ?veriT__471 ?veriT__473))) (not (= ?veriT__471 ?veriT__474))) (not (= ?veriT__472 ?veriT__473))) (not (= ?veriT__472 ?veriT__474))) (not (= ?veriT__474 ?veriT__473)))))))))
(set .c9 (tmp_alphaconv :clauses (.c6) :conclusion ((let ((?veriT__475 (op e0 e0))(?veriT__476 (op e0 e1))(?veriT__477 (op e0 e2))(?veriT__478 (op e0 e3))(?veriT__479 (op e0 e4))(?veriT__480 (op e0 e5))(?veriT__481 (op e1 e0))(?veriT__482 (op e1 e1))(?veriT__483 (op e1 e2))(?veriT__484 (op e1 e3))(?veriT__485 (op e1 e4))(?veriT__486 (op e1 e5))(?veriT__487 (op e2 e0))(?veriT__488 (op e2 e1))(?veriT__489 (op e2 e2))(?veriT__490 (op e2 e3))(?veriT__491 (op e2 e4))(?veriT__492 (op e2 e5))(?veriT__493 (op e3 e0))(?veriT__494 (op e3 e1))(?veriT__495 (op e3 e2))(?veriT__496 (op e3 e3))(?veriT__497 (op e3 e4))(?veriT__498 (op e3 e5))(?veriT__499 (op e4 e0))(?veriT__500 (op e4 e1))(?veriT__501 (op e4 e2))(?veriT__502 (op e4 e3))(?veriT__503 (op e4 e4))(?veriT__504 (op e4 e5))(?veriT__505 (op e5 e0))(?veriT__506 (op e5 e1))(?veriT__507 (op e5 e2))(?veriT__508 (op e5 e3))(?veriT__509 (op e5 e4))(?veriT__510 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (or (or (or (or (or (= ?veriT__475 e0) (= e1 ?veriT__475)) (= ?veriT__475 e2)) (= ?veriT__475 e3)) (= e4 ?veriT__475)) (= e5 ?veriT__475)) (or (or (or (or (or (= ?veriT__476 e0) (= e1 ?veriT__476)) (= ?veriT__476 e2)) (= ?veriT__476 e3)) (= e4 ?veriT__476)) (= e5 ?veriT__476))) (or (or (or (or (or (= e0 ?veriT__477) (= e1 ?veriT__477)) (= ?veriT__477 e2)) (= e3 ?veriT__477)) (= e4 ?veriT__477)) (= e5 ?veriT__477))) (or (or (or (or (or (= e0 ?veriT__478) (= e1 ?veriT__478)) (= e2 ?veriT__478)) (= e3 ?veriT__478)) (= e4 ?veriT__478)) (= e5 ?veriT__478))) (or (or (or (or (or (= ?veriT__479 e0) (= ?veriT__479 e1)) (= ?veriT__479 e2)) (= ?veriT__479 e3)) (= ?veriT__479 e4)) (= ?veriT__479 e5))) (or (or (or (or (or (= ?veriT__480 e0) (= e1 ?veriT__480)) (= ?veriT__480 e2)) (= ?veriT__480 e3)) (= e4 ?veriT__480)) (= e5 ?veriT__480))) (and (and (and (and (and (or (or (or (or (or (= ?veriT__481 e0) (= e1 ?veriT__481)) (= ?veriT__481 e2)) (= e3 ?veriT__481)) (= e4 ?veriT__481)) (= e5 ?veriT__481)) (or (or (or (or (or (= e0 ?veriT__482) (= e1 ?veriT__482)) (= ?veriT__482 e2)) (= e3 ?veriT__482)) (= e4 ?veriT__482)) (= e5 ?veriT__482))) (or (or (or (or (or (= e0 ?veriT__483) (= e1 ?veriT__483)) (= ?veriT__483 e2)) (= e3 ?veriT__483)) (= e4 ?veriT__483)) (= e5 ?veriT__483))) (or (or (or (or (or (= e0 ?veriT__484) (= e1 ?veriT__484)) (= ?veriT__484 e2)) (= e3 ?veriT__484)) (= e4 ?veriT__484)) (= e5 ?veriT__484))) (or (or (or (or (or (= ?veriT__485 e0) (= e1 ?veriT__485)) (= ?veriT__485 e2)) (= ?veriT__485 e3)) (= e4 ?veriT__485)) (= e5 ?veriT__485))) (or (or (or (or (or (= ?veriT__486 e0) (= ?veriT__486 e1)) (= ?veriT__486 e2)) (= ?veriT__486 e3)) (= ?veriT__486 e4)) (= ?veriT__486 e5)))) (and (and (and (and (and (or (or (or (or (or (= ?veriT__487 e0) (= e1 ?veriT__487)) (= ?veriT__487 e2)) (= ?veriT__487 e3)) (= e4 ?veriT__487)) (= e5 ?veriT__487)) (or (or (or (or (or (= e0 ?veriT__488) (= e1 ?veriT__488)) (= ?veriT__488 e2)) (= e3 ?veriT__488)) (= e4 ?veriT__488)) (= e5 ?veriT__488))) (or (or (or (or (or (= ?veriT__489 e0) (= e1 ?veriT__489)) (= ?veriT__489 e2)) (= ?veriT__489 e3)) (= e4 ?veriT__489)) (= e5 ?veriT__489))) (or (or (or (or (or (= e0 ?veriT__490) (= e1 ?veriT__490)) (= e2 ?veriT__490)) (= e3 ?veriT__490)) (= e4 ?veriT__490)) (= e5 ?veriT__490))) (or (or (or (or (or (= e0 ?veriT__491) (= e1 ?veriT__491)) (= e2 ?veriT__491)) (= e3 ?veriT__491)) (= e4 ?veriT__491)) (= e5 ?veriT__491))) (or (or (or (or (or (= ?veriT__492 e0) (= e1 ?veriT__492)) (= ?veriT__492 e2)) (= ?veriT__492 e3)) (= e4 ?veriT__492)) (= e5 ?veriT__492)))) (and (and (and (and (and (or (or (or (or (or (= ?veriT__493 e0) (= e1 ?veriT__493)) (= ?veriT__493 e2)) (= ?veriT__493 e3)) (= e4 ?veriT__493)) (= e5 ?veriT__493)) (or (or (or (or (or (= e0 ?veriT__494) (= e1 ?veriT__494)) (= ?veriT__494 e2)) (= e3 ?veriT__494)) (= e4 ?veriT__494)) (= e5 ?veriT__494))) (or (or (or (or (or (= e0 ?veriT__495) (= e1 ?veriT__495)) (= ?veriT__495 e2)) (= e3 ?veriT__495)) (= e4 ?veriT__495)) (= e5 ?veriT__495))) (or (or (or (or (or (= ?veriT__496 e0) (= e1 ?veriT__496)) (= ?veriT__496 e2)) (= ?veriT__496 e3)) (= e4 ?veriT__496)) (= e5 ?veriT__496))) (or (or (or (or (or (= e0 ?veriT__497) (= e1 ?veriT__497)) (= ?veriT__497 e2)) (= e3 ?veriT__497)) (= e4 ?veriT__497)) (= e5 ?veriT__497))) (or (or (or (or (or (= e0 ?veriT__498) (= e1 ?veriT__498)) (= ?veriT__498 e2)) (= e3 ?veriT__498)) (= e4 ?veriT__498)) (= e5 ?veriT__498)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?veriT__499) (= e1 ?veriT__499)) (= ?veriT__499 e2)) (= e3 ?veriT__499)) (= e4 ?veriT__499)) (= e5 ?veriT__499)) (or (or (or (or (or (= ?veriT__500 e0) (= e1 ?veriT__500)) (= ?veriT__500 e2)) (= ?veriT__500 e3)) (= e4 ?veriT__500)) (= e5 ?veriT__500))) (or (or (or (or (or (= ?veriT__501 e0) (= ?veriT__501 e1)) (= ?veriT__501 e2)) (= ?veriT__501 e3)) (= ?veriT__501 e4)) (= e5 ?veriT__501))) (or (or (or (or (or (= ?veriT__502 e0) (= ?veriT__502 e1)) (= ?veriT__502 e2)) (= ?veriT__502 e3)) (= ?veriT__502 e4)) (= e5 ?veriT__502))) (or (or (or (or (or (= e0 ?veriT__503) (= e1 ?veriT__503)) (= e2 ?veriT__503)) (= e3 ?veriT__503)) (= e4 ?veriT__503)) (= e5 ?veriT__503))) (or (or (or (or (or (= ?veriT__504 e0) (= ?veriT__504 e1)) (= ?veriT__504 e2)) (= ?veriT__504 e3)) (= ?veriT__504 e4)) (= ?veriT__504 e5)))) (and (and (and (and (and (or (or (or (or (or (= e0 ?veriT__505) (= e1 ?veriT__505)) (= e2 ?veriT__505)) (= e3 ?veriT__505)) (= e4 ?veriT__505)) (= e5 ?veriT__505)) (or (or (or (or (or (= ?veriT__506 e0) (= e1 ?veriT__506)) (= ?veriT__506 e2)) (= ?veriT__506 e3)) (= e4 ?veriT__506)) (= e5 ?veriT__506))) (or (or (or (or (or (= e0 ?veriT__507) (= e1 ?veriT__507)) (= e2 ?veriT__507)) (= e3 ?veriT__507)) (= e4 ?veriT__507)) (= e5 ?veriT__507))) (or (or (or (or (or (= ?veriT__508 e0) (= e1 ?veriT__508)) (= ?veriT__508 e2)) (= ?veriT__508 e3)) (= e4 ?veriT__508)) (= e5 ?veriT__508))) (or (or (or (or (or (= e0 ?veriT__509) (= e1 ?veriT__509)) (= ?veriT__509 e2)) (= e3 ?veriT__509)) (= e4 ?veriT__509)) (= e5 ?veriT__509))) (or (or (or (or (or (= e0 ?veriT__510) (= e1 ?veriT__510)) (= ?veriT__510 e2)) (= e3 ?veriT__510)) (= e4 ?veriT__510)) (= e5 ?veriT__510))))))))
(set .c10 (tmp_alphaconv :clauses (.c7) :conclusion ((let ((?veriT__871 (op e0 e0))(?veriT__872 (op e0 e1))(?veriT__873 (op e0 e2))(?veriT__874 (op e0 e3))(?veriT__875 (op e0 e4))(?veriT__876 (op e0 e5))(?veriT__877 (op e1 e0))(?veriT__878 (op e1 e1))(?veriT__879 (op e1 e2))(?veriT__880 (op e1 e3))(?veriT__881 (op e1 e4))(?veriT__882 (op e1 e5))(?veriT__883 (op e2 e0))(?veriT__884 (op e2 e1))(?veriT__885 (op e2 e2))(?veriT__886 (op e2 e3))(?veriT__887 (op e2 e4))(?veriT__888 (op e2 e5))(?veriT__889 (op e3 e0))(?veriT__890 (op e3 e1))(?veriT__891 (op e3 e2))(?veriT__892 (op e3 e3))(?veriT__893 (op e3 e4))(?veriT__894 (op e3 e5))(?veriT__895 (op e4 e0))(?veriT__896 (op e4 e1))(?veriT__897 (op e4 e2))(?veriT__898 (op e4 e3))(?veriT__899 (op e4 e4))(?veriT__900 (op e4 e5))(?veriT__901 (op e5 e0))(?veriT__902 (op e5 e1))(?veriT__903 (op e5 e2))(?veriT__904 (op e5 e3))(?veriT__905 (op e5 e4))(?veriT__906 (op e5 e5))) (let ((?veriT__907 (= (op e0 ?veriT__871) e0))(?veriT__908 (= (op e1 ?veriT__878) e1))(?veriT__909 (= (op e2 ?veriT__885) e2))(?veriT__910 (= e3 (op e3 ?veriT__892)))(?veriT__911 (= e4 (op e4 ?veriT__899)))(?veriT__912 (= e5 (op e5 ?veriT__906)))) (and (or (or (or (or (or (and ?veriT__907 (not (= e0 unit))) (and ?veriT__908 (not (= e1 unit)))) (and ?veriT__909 (not (= unit e2)))) (and ?veriT__910 (not (= e3 unit)))) (and ?veriT__911 (not (= e4 unit)))) (and ?veriT__912 (not (= e5 unit)))) (or (or (or (or (or (and (and (and (and (and (or (not ?veriT__907) (= unit ?veriT__871)) (or (not (= (op e1 ?veriT__877) e0)) (= ?veriT__877 unit))) (or (not (= e0 (op e2 ?veriT__883))) (= ?veriT__883 unit))) (or (not (= (op e3 ?veriT__889) e0)) (= unit ?veriT__889))) (or (not (= e0 (op e4 ?veriT__895))) (= ?veriT__895 unit))) (or (not (= e0 (op e5 ?veriT__901))) (= unit ?veriT__901))) (and (and (and (and (and (or (not (= e1 (op e0 ?veriT__872))) (= ?veriT__872 unit)) (or (not ?veriT__908) (= unit ?veriT__878))) (or (not (= e1 (op e2 ?veriT__884))) (= ?veriT__884 unit))) (or (not (= e1 (op e3 ?veriT__890))) (= ?veriT__890 unit))) (or (not (= e1 (op e4 ?veriT__896))) (= ?veriT__896 unit))) (or (not (= e1 (op e5 ?veriT__902))) (= ?veriT__902 unit)))) (and (and (and (and (and (or (not (= e2 (op e0 ?veriT__873))) (= ?veriT__873 unit)) (or (not (= e2 (op e1 ?veriT__879))) (= unit ?veriT__879))) (or (not ?veriT__909) (= unit ?veriT__885))) (or (not (= e2 (op e3 ?veriT__891))) (= unit ?veriT__891))) (or (not (= (op e4 ?veriT__897) e2)) (= ?veriT__897 unit))) (or (not (= e2 (op e5 ?veriT__903))) (= unit ?veriT__903)))) (and (and (and (and (and (or (not (= (op e0 ?veriT__874) e3)) (= ?veriT__874 unit)) (or (not (= e3 (op e1 ?veriT__880))) (= ?veriT__880 unit))) (or (not (= e3 (op e2 ?veriT__886))) (= ?veriT__886 unit))) (or (not ?veriT__910) (= ?veriT__892 unit))) (or (not (= (op e4 ?veriT__898) e3)) (= unit ?veriT__898))) (or (not (= e3 (op e5 ?veriT__904))) (= ?veriT__904 unit)))) (and (and (and (and (and (or (not (= e4 (op e0 ?veriT__875))) (= unit ?veriT__875)) (or (not (= e4 (op e1 ?veriT__881))) (= ?veriT__881 unit))) (or (not (= e4 (op e2 ?veriT__887))) (= ?veriT__887 unit))) (or (not (= (op e3 ?veriT__893) e4)) (= ?veriT__893 unit))) (or (not ?veriT__911) (= ?veriT__899 unit))) (or (not (= e4 (op e5 ?veriT__905))) (= ?veriT__905 unit)))) (and (and (and (and (and (or (not (= e5 (op e0 ?veriT__876))) (= unit ?veriT__876)) (or (not (= e5 (op e1 ?veriT__882))) (= unit ?veriT__882))) (or (not (= e5 (op e2 ?veriT__888))) (= ?veriT__888 unit))) (or (not (= e5 (op e3 ?veriT__894))) (= ?veriT__894 unit))) (or (not (= e5 (op e4 ?veriT__900))) (= unit ?veriT__900))) (or (not ?veriT__912) (= unit ?veriT__906))))))))))
(set .c11 (tmp_alphaconv :clauses (.c8) :conclusion ((let ((?veriT__913 (op e0 e0))(?veriT__914 (op e0 e1))(?veriT__915 (op e0 e2))(?veriT__916 (op e0 e3))(?veriT__917 (op e0 e4))(?veriT__918 (op e0 e5))(?veriT__919 (op e1 e0))(?veriT__920 (op e1 e1))(?veriT__921 (op e1 e2))(?veriT__922 (op e1 e3))(?veriT__923 (op e1 e4))(?veriT__924 (op e1 e5))(?veriT__925 (op e2 e0))(?veriT__926 (op e2 e1))(?veriT__927 (op e2 e2))(?veriT__928 (op e2 e3))(?veriT__929 (op e2 e4))(?veriT__930 (op e2 e5))(?veriT__931 (op e3 e0))(?veriT__932 (op e3 e1))(?veriT__933 (op e3 e2))(?veriT__934 (op e3 e3))(?veriT__935 (op e3 e4))(?veriT__936 (op e3 e5))(?veriT__937 (op e4 e0))(?veriT__938 (op e4 e1))(?veriT__939 (op e4 e2))(?veriT__940 (op e4 e3))(?veriT__941 (op e4 e4))(?veriT__942 (op e4 e5))(?veriT__943 (op e5 e0))(?veriT__944 (op e5 e1))(?veriT__945 (op e5 e2))(?veriT__946 (op e5 e3))(?veriT__947 (op e5 e4))(?veriT__948 (op e5 e5))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__913 ?veriT__919)) (not (= ?veriT__913 ?veriT__925))) (not (= ?veriT__913 ?veriT__931))) (not (= ?veriT__913 ?veriT__937))) (not (= ?veriT__913 ?veriT__943))) (not (= ?veriT__919 ?veriT__925))) (not (= ?veriT__931 ?veriT__919))) (not (= ?veriT__937 ?veriT__919))) (not (= ?veriT__943 ?veriT__919))) (not (= ?veriT__931 ?veriT__925))) (not (= ?veriT__937 ?veriT__925))) (not (= ?veriT__943 ?veriT__925))) (not (= ?veriT__931 ?veriT__937))) (not (= ?veriT__931 ?veriT__943))) (not (= ?veriT__943 ?veriT__937))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__920 ?veriT__914)) (not (= ?veriT__926 ?veriT__914))) (not (= ?veriT__932 ?veriT__914))) (not (= ?veriT__938 ?veriT__914))) (not (= ?veriT__944 ?veriT__914))) (not (= ?veriT__920 ?veriT__926))) (not (= ?veriT__920 ?veriT__932))) (not (= ?veriT__920 ?veriT__938))) (not (= ?veriT__920 ?veriT__944))) (not (= ?veriT__932 ?veriT__926))) (not (= ?veriT__938 ?veriT__926))) (not (= ?veriT__944 ?veriT__926))) (not (= ?veriT__932 ?veriT__938))) (not (= ?veriT__932 ?veriT__944))) (not (= ?veriT__944 ?veriT__938)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__915 ?veriT__921)) (not (= ?veriT__915 ?veriT__927))) (not (= ?veriT__933 ?veriT__915))) (not (= ?veriT__915 ?veriT__939))) (not (= ?veriT__915 ?veriT__945))) (not (= ?veriT__921 ?veriT__927))) (not (= ?veriT__933 ?veriT__921))) (not (= ?veriT__939 ?veriT__921))) (not (= ?veriT__945 ?veriT__921))) (not (= ?veriT__933 ?veriT__927))) (not (= ?veriT__939 ?veriT__927))) (not (= ?veriT__945 ?veriT__927))) (not (= ?veriT__933 ?veriT__939))) (not (= ?veriT__933 ?veriT__945))) (not (= ?veriT__945 ?veriT__939)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__922 ?veriT__916)) (not (= ?veriT__928 ?veriT__916))) (not (= ?veriT__934 ?veriT__916))) (not (= ?veriT__940 ?veriT__916))) (not (= ?veriT__946 ?veriT__916))) (not (= ?veriT__928 ?veriT__922))) (not (= ?veriT__934 ?veriT__922))) (not (= ?veriT__940 ?veriT__922))) (not (= ?veriT__946 ?veriT__922))) (not (= ?veriT__928 ?veriT__934))) (not (= ?veriT__928 ?veriT__940))) (not (= ?veriT__928 ?veriT__946))) (not (= ?veriT__934 ?veriT__940))) (not (= ?veriT__934 ?veriT__946))) (not (= ?veriT__940 ?veriT__946)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__917 ?veriT__923)) (not (= ?veriT__917 ?veriT__929))) (not (= ?veriT__935 ?veriT__917))) (not (= ?veriT__917 ?veriT__941))) (not (= ?veriT__947 ?veriT__917))) (not (= ?veriT__929 ?veriT__923))) (not (= ?veriT__935 ?veriT__923))) (not (= ?veriT__923 ?veriT__941))) (not (= ?veriT__947 ?veriT__923))) (not (= ?veriT__935 ?veriT__929))) (not (= ?veriT__929 ?veriT__941))) (not (= ?veriT__947 ?veriT__929))) (not (= ?veriT__935 ?veriT__941))) (not (= ?veriT__935 ?veriT__947))) (not (= ?veriT__947 ?veriT__941)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__924 ?veriT__918)) (not (= ?veriT__918 ?veriT__930))) (not (= ?veriT__918 ?veriT__936))) (not (= ?veriT__942 ?veriT__918))) (not (= ?veriT__948 ?veriT__918))) (not (= ?veriT__924 ?veriT__930))) (not (= ?veriT__924 ?veriT__936))) (not (= ?veriT__924 ?veriT__942))) (not (= ?veriT__924 ?veriT__948))) (not (= ?veriT__936 ?veriT__930))) (not (= ?veriT__942 ?veriT__930))) (not (= ?veriT__948 ?veriT__930))) (not (= ?veriT__942 ?veriT__936))) (not (= ?veriT__948 ?veriT__936))) (not (= ?veriT__942 ?veriT__948)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__913 ?veriT__914)) (not (= ?veriT__913 ?veriT__915))) (not (= ?veriT__913 ?veriT__916))) (not (= ?veriT__913 ?veriT__917))) (not (= ?veriT__913 ?veriT__918))) (not (= ?veriT__915 ?veriT__914))) (not (= ?veriT__914 ?veriT__916))) (not (= ?veriT__917 ?veriT__914))) (not (= ?veriT__918 ?veriT__914))) (not (= ?veriT__915 ?veriT__916))) (not (= ?veriT__915 ?veriT__917))) (not (= ?veriT__915 ?veriT__918))) (not (= ?veriT__917 ?veriT__916))) (not (= ?veriT__918 ?veriT__916))) (not (= ?veriT__917 ?veriT__918))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__920 ?veriT__919)) (not (= ?veriT__921 ?veriT__919))) (not (= ?veriT__919 ?veriT__922))) (not (= ?veriT__919 ?veriT__923))) (not (= ?veriT__924 ?veriT__919))) (not (= ?veriT__920 ?veriT__921))) (not (= ?veriT__920 ?veriT__922))) (not (= ?veriT__920 ?veriT__923))) (not (= ?veriT__920 ?veriT__924))) (not (= ?veriT__921 ?veriT__922))) (not (= ?veriT__921 ?veriT__923))) (not (= ?veriT__924 ?veriT__921))) (not (= ?veriT__923 ?veriT__922))) (not (= ?veriT__924 ?veriT__922))) (not (= ?veriT__924 ?veriT__923)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__926 ?veriT__925)) (not (= ?veriT__927 ?veriT__925))) (not (= ?veriT__928 ?veriT__925))) (not (= ?veriT__929 ?veriT__925))) (not (= ?veriT__925 ?veriT__930))) (not (= ?veriT__926 ?veriT__927))) (not (= ?veriT__928 ?veriT__926))) (not (= ?veriT__929 ?veriT__926))) (not (= ?veriT__926 ?veriT__930))) (not (= ?veriT__928 ?veriT__927))) (not (= ?veriT__929 ?veriT__927))) (not (= ?veriT__927 ?veriT__930))) (not (= ?veriT__928 ?veriT__929))) (not (= ?veriT__928 ?veriT__930))) (not (= ?veriT__929 ?veriT__930)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__932 ?veriT__931)) (not (= ?veriT__933 ?veriT__931))) (not (= ?veriT__931 ?veriT__934))) (not (= ?veriT__935 ?veriT__931))) (not (= ?veriT__931 ?veriT__936))) (not (= ?veriT__932 ?veriT__933))) (not (= ?veriT__932 ?veriT__934))) (not (= ?veriT__935 ?veriT__932))) (not (= ?veriT__932 ?veriT__936))) (not (= ?veriT__933 ?veriT__934))) (not (= ?veriT__935 ?veriT__933))) (not (= ?veriT__933 ?veriT__936))) (not (= ?veriT__935 ?veriT__934))) (not (= ?veriT__934 ?veriT__936))) (not (= ?veriT__935 ?veriT__936)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__937 ?veriT__938)) (not (= ?veriT__937 ?veriT__939))) (not (= ?veriT__937 ?veriT__940))) (not (= ?veriT__937 ?veriT__941))) (not (= ?veriT__942 ?veriT__937))) (not (= ?veriT__939 ?veriT__938))) (not (= ?veriT__938 ?veriT__940))) (not (= ?veriT__938 ?veriT__941))) (not (= ?veriT__942 ?veriT__938))) (not (= ?veriT__939 ?veriT__940))) (not (= ?veriT__939 ?veriT__941))) (not (= ?veriT__942 ?veriT__939))) (not (= ?veriT__940 ?veriT__941))) (not (= ?veriT__942 ?veriT__940))) (not (= ?veriT__942 ?veriT__941)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= ?veriT__944 ?veriT__943)) (not (= ?veriT__943 ?veriT__945))) (not (= ?veriT__943 ?veriT__946))) (not (= ?veriT__947 ?veriT__943))) (not (= ?veriT__948 ?veriT__943))) (not (= ?veriT__944 ?veriT__945))) (not (= ?veriT__944 ?veriT__946))) (not (= ?veriT__944 ?veriT__947))) (not (= ?veriT__948 ?veriT__944))) (not (= ?veriT__945 ?veriT__946))) (not (= ?veriT__947 ?veriT__945))) (not (= ?veriT__948 ?veriT__945))) (not (= ?veriT__947 ?veriT__946))) (not (= ?veriT__948 ?veriT__946))) (not (= ?veriT__948 ?veriT__947)))))))))
(set .c12 (tmp_let_elim :clauses (.c9) :conclusion ((and (and (and (and (and (and (and (and (and (and (or (or (or (or (or (= e0 (op e0 e0)) (= e1 (op e0 e0))) (= e2 (op e0 e0))) (= e3 (op e0 e0))) (= e4 (op e0 e0))) (= e5 (op e0 e0))) (or (or (or (or (or (= (op e0 e1) e0) (= e1 (op e0 e1))) (= (op e0 e1) e2)) (= (op e0 e1) e3)) (= e4 (op e0 e1))) (= e5 (op e0 e1)))) (or (or (or (or (or (= (op e0 e2) e0) (= e1 (op e0 e2))) (= (op e0 e2) e2)) (= (op e0 e2) e3)) (= e4 (op e0 e2))) (= e5 (op e0 e2)))) (or (or (or (or (or (= e0 (op e0 e3)) (= e1 (op e0 e3))) (= (op e0 e3) e2)) (= e3 (op e0 e3))) (= e4 (op e0 e3))) (= e5 (op e0 e3)))) (or (or (or (or (or (= (op e0 e4) e0) (= e1 (op e0 e4))) (= (op e0 e4) e2)) (= (op e0 e4) e3)) (= e4 (op e0 e4))) (= e5 (op e0 e4)))) (or (or (or (or (or (= (op e0 e5) e0) (= (op e0 e5) e1)) (= (op e0 e5) e2)) (= (op e0 e5) e3)) (= (op e0 e5) e4)) (= (op e0 e5) e5))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5))))) (and (and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))) (or (or (or (or (or (= (op e2 e5) e0) (= e1 (op e2 e5))) (= (op e2 e5) e2)) (= (op e2 e5) e3)) (= e4 (op e2 e5))) (= e5 (op e2 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))) (or (or (or (or (or (= e0 (op e3 e4)) (= e1 (op e3 e4))) (= (op e3 e4) e2)) (= e3 (op e3 e4))) (= e4 (op e3 e4))) (= e5 (op e3 e4)))) (or (or (or (or (or (= e0 (op e3 e5)) (= e1 (op e3 e5))) (= e2 (op e3 e5))) (= e3 (op e3 e5))) (= e4 (op e3 e5))) (= e5 (op e3 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e4 e0)) (= e1 (op e4 e0))) (= e2 (op e4 e0))) (= e3 (op e4 e0))) (= e4 (op e4 e0))) (= e5 (op e4 e0))) (or (or (or (or (or (= e0 (op e4 e1)) (= e1 (op e4 e1))) (= (op e4 e1) e2)) (= e3 (op e4 e1))) (= e4 (op e4 e1))) (= e5 (op e4 e1)))) (or (or (or (or (or (= e0 (op e4 e2)) (= e1 (op e4 e2))) (= (op e4 e2) e2)) (= e3 (op e4 e2))) (= e4 (op e4 e2))) (= e5 (op e4 e2)))) (or (or (or (or (or (= e0 (op e4 e3)) (= e1 (op e4 e3))) (= (op e4 e3) e2)) (= e3 (op e4 e3))) (= e4 (op e4 e3))) (= e5 (op e4 e3)))) (or (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4)))) (or (or (or (or (or (= e0 (op e4 e5)) (= e1 (op e4 e5))) (= e2 (op e4 e5))) (= e3 (op e4 e5))) (= e4 (op e4 e5))) (= e5 (op e4 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e5 e0)) (= e1 (op e5 e0))) (= (op e5 e0) e2)) (= e3 (op e5 e0))) (= e4 (op e5 e0))) (= e5 (op e5 e0))) (or (or (or (or (or (= e0 (op e5 e1)) (= e1 (op e5 e1))) (= (op e5 e1) e2)) (= e3 (op e5 e1))) (= e4 (op e5 e1))) (= e5 (op e5 e1)))) (or (or (or (or (or (= (op e5 e2) e0) (= e1 (op e5 e2))) (= (op e5 e2) e2)) (= (op e5 e2) e3)) (= e4 (op e5 e2))) (= e5 (op e5 e2)))) (or (or (or (or (or (= (op e5 e3) e0) (= e1 (op e5 e3))) (= (op e5 e3) e2)) (= (op e5 e3) e3)) (= e4 (op e5 e3))) (= e5 (op e5 e3)))) (or (or (or (or (or (= e0 (op e5 e4)) (= e1 (op e5 e4))) (= e2 (op e5 e4))) (= e3 (op e5 e4))) (= e4 (op e5 e4))) (= e5 (op e5 e4)))) (or (or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4)) (= (op e5 e5) e5)))))))
(set .c13 (tmp_let_elim :clauses (.c10) :conclusion ((and (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))) (and (= e5 (op e5 (op e5 e5))) (not (= e5 unit)))) (or (or (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))) (and (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))) (or (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e5) unit))))))))
(set .c14 (tmp_let_elim :clauses (.c11) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))) (not (= (op e5 e3) (op e4 e3))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))) (not (= (op e3 e4) (op e5 e4)))) (not (= (op e4 e4) (op e5 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))) (not (= (op e3 e5) (op e4 e5)))) (not (= (op e5 e5) (op e3 e5)))) (not (= (op e5 e5) (op e4 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))) (not (= (op e3 e4) (op e3 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))) (not (= (op e4 e3) (op e4 e5)))) (not (= (op e4 e4) (op e4 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))) (not (= (op e5 e3) (op e5 e4)))) (not (= (op e5 e5) (op e5 e3)))) (not (= (op e5 e5) (op e5 e4)))))))))
(set .c15 (and :clauses (.c12) :conclusion ((and (and (and (and (and (and (and (and (and (or (or (or (or (or (= e0 (op e0 e0)) (= e1 (op e0 e0))) (= e2 (op e0 e0))) (= e3 (op e0 e0))) (= e4 (op e0 e0))) (= e5 (op e0 e0))) (or (or (or (or (or (= (op e0 e1) e0) (= e1 (op e0 e1))) (= (op e0 e1) e2)) (= (op e0 e1) e3)) (= e4 (op e0 e1))) (= e5 (op e0 e1)))) (or (or (or (or (or (= (op e0 e2) e0) (= e1 (op e0 e2))) (= (op e0 e2) e2)) (= (op e0 e2) e3)) (= e4 (op e0 e2))) (= e5 (op e0 e2)))) (or (or (or (or (or (= e0 (op e0 e3)) (= e1 (op e0 e3))) (= (op e0 e3) e2)) (= e3 (op e0 e3))) (= e4 (op e0 e3))) (= e5 (op e0 e3)))) (or (or (or (or (or (= (op e0 e4) e0) (= e1 (op e0 e4))) (= (op e0 e4) e2)) (= (op e0 e4) e3)) (= e4 (op e0 e4))) (= e5 (op e0 e4)))) (or (or (or (or (or (= (op e0 e5) e0) (= (op e0 e5) e1)) (= (op e0 e5) e2)) (= (op e0 e5) e3)) (= (op e0 e5) e4)) (= (op e0 e5) e5))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5))))) (and (and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))) (or (or (or (or (or (= (op e2 e5) e0) (= e1 (op e2 e5))) (= (op e2 e5) e2)) (= (op e2 e5) e3)) (= e4 (op e2 e5))) (= e5 (op e2 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))) (or (or (or (or (or (= e0 (op e3 e4)) (= e1 (op e3 e4))) (= (op e3 e4) e2)) (= e3 (op e3 e4))) (= e4 (op e3 e4))) (= e5 (op e3 e4)))) (or (or (or (or (or (= e0 (op e3 e5)) (= e1 (op e3 e5))) (= e2 (op e3 e5))) (= e3 (op e3 e5))) (= e4 (op e3 e5))) (= e5 (op e3 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e4 e0)) (= e1 (op e4 e0))) (= e2 (op e4 e0))) (= e3 (op e4 e0))) (= e4 (op e4 e0))) (= e5 (op e4 e0))) (or (or (or (or (or (= e0 (op e4 e1)) (= e1 (op e4 e1))) (= (op e4 e1) e2)) (= e3 (op e4 e1))) (= e4 (op e4 e1))) (= e5 (op e4 e1)))) (or (or (or (or (or (= e0 (op e4 e2)) (= e1 (op e4 e2))) (= (op e4 e2) e2)) (= e3 (op e4 e2))) (= e4 (op e4 e2))) (= e5 (op e4 e2)))) (or (or (or (or (or (= e0 (op e4 e3)) (= e1 (op e4 e3))) (= (op e4 e3) e2)) (= e3 (op e4 e3))) (= e4 (op e4 e3))) (= e5 (op e4 e3)))) (or (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4)))) (or (or (or (or (or (= e0 (op e4 e5)) (= e1 (op e4 e5))) (= e2 (op e4 e5))) (= e3 (op e4 e5))) (= e4 (op e4 e5))) (= e5 (op e4 e5))))))))
(set .c16 (and :clauses (.c15) :conclusion ((and (and (and (and (and (and (and (and (or (or (or (or (or (= e0 (op e0 e0)) (= e1 (op e0 e0))) (= e2 (op e0 e0))) (= e3 (op e0 e0))) (= e4 (op e0 e0))) (= e5 (op e0 e0))) (or (or (or (or (or (= (op e0 e1) e0) (= e1 (op e0 e1))) (= (op e0 e1) e2)) (= (op e0 e1) e3)) (= e4 (op e0 e1))) (= e5 (op e0 e1)))) (or (or (or (or (or (= (op e0 e2) e0) (= e1 (op e0 e2))) (= (op e0 e2) e2)) (= (op e0 e2) e3)) (= e4 (op e0 e2))) (= e5 (op e0 e2)))) (or (or (or (or (or (= e0 (op e0 e3)) (= e1 (op e0 e3))) (= (op e0 e3) e2)) (= e3 (op e0 e3))) (= e4 (op e0 e3))) (= e5 (op e0 e3)))) (or (or (or (or (or (= (op e0 e4) e0) (= e1 (op e0 e4))) (= (op e0 e4) e2)) (= (op e0 e4) e3)) (= e4 (op e0 e4))) (= e5 (op e0 e4)))) (or (or (or (or (or (= (op e0 e5) e0) (= (op e0 e5) e1)) (= (op e0 e5) e2)) (= (op e0 e5) e3)) (= (op e0 e5) e4)) (= (op e0 e5) e5))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5))))) (and (and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))) (or (or (or (or (or (= (op e2 e5) e0) (= e1 (op e2 e5))) (= (op e2 e5) e2)) (= (op e2 e5) e3)) (= e4 (op e2 e5))) (= e5 (op e2 e5))))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))) (or (or (or (or (or (= e0 (op e3 e4)) (= e1 (op e3 e4))) (= (op e3 e4) e2)) (= e3 (op e3 e4))) (= e4 (op e3 e4))) (= e5 (op e3 e4)))) (or (or (or (or (or (= e0 (op e3 e5)) (= e1 (op e3 e5))) (= e2 (op e3 e5))) (= e3 (op e3 e5))) (= e4 (op e3 e5))) (= e5 (op e3 e5))))))))
(set .c17 (and :clauses (.c16) :conclusion ((and (and (and (and (and (and (and (or (or (or (or (or (= e0 (op e0 e0)) (= e1 (op e0 e0))) (= e2 (op e0 e0))) (= e3 (op e0 e0))) (= e4 (op e0 e0))) (= e5 (op e0 e0))) (or (or (or (or (or (= (op e0 e1) e0) (= e1 (op e0 e1))) (= (op e0 e1) e2)) (= (op e0 e1) e3)) (= e4 (op e0 e1))) (= e5 (op e0 e1)))) (or (or (or (or (or (= (op e0 e2) e0) (= e1 (op e0 e2))) (= (op e0 e2) e2)) (= (op e0 e2) e3)) (= e4 (op e0 e2))) (= e5 (op e0 e2)))) (or (or (or (or (or (= e0 (op e0 e3)) (= e1 (op e0 e3))) (= (op e0 e3) e2)) (= e3 (op e0 e3))) (= e4 (op e0 e3))) (= e5 (op e0 e3)))) (or (or (or (or (or (= (op e0 e4) e0) (= e1 (op e0 e4))) (= (op e0 e4) e2)) (= (op e0 e4) e3)) (= e4 (op e0 e4))) (= e5 (op e0 e4)))) (or (or (or (or (or (= (op e0 e5) e0) (= (op e0 e5) e1)) (= (op e0 e5) e2)) (= (op e0 e5) e3)) (= (op e0 e5) e4)) (= (op e0 e5) e5))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5))))) (and (and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))) (or (or (or (or (or (= (op e2 e5) e0) (= e1 (op e2 e5))) (= (op e2 e5) e2)) (= (op e2 e5) e3)) (= e4 (op e2 e5))) (= e5 (op e2 e5))))))))
(set .c18 (and :clauses (.c17) :conclusion ((and (and (and (and (and (and (or (or (or (or (or (= e0 (op e0 e0)) (= e1 (op e0 e0))) (= e2 (op e0 e0))) (= e3 (op e0 e0))) (= e4 (op e0 e0))) (= e5 (op e0 e0))) (or (or (or (or (or (= (op e0 e1) e0) (= e1 (op e0 e1))) (= (op e0 e1) e2)) (= (op e0 e1) e3)) (= e4 (op e0 e1))) (= e5 (op e0 e1)))) (or (or (or (or (or (= (op e0 e2) e0) (= e1 (op e0 e2))) (= (op e0 e2) e2)) (= (op e0 e2) e3)) (= e4 (op e0 e2))) (= e5 (op e0 e2)))) (or (or (or (or (or (= e0 (op e0 e3)) (= e1 (op e0 e3))) (= (op e0 e3) e2)) (= e3 (op e0 e3))) (= e4 (op e0 e3))) (= e5 (op e0 e3)))) (or (or (or (or (or (= (op e0 e4) e0) (= e1 (op e0 e4))) (= (op e0 e4) e2)) (= (op e0 e4) e3)) (= e4 (op e0 e4))) (= e5 (op e0 e4)))) (or (or (or (or (or (= (op e0 e5) e0) (= (op e0 e5) e1)) (= (op e0 e5) e2)) (= (op e0 e5) e3)) (= (op e0 e5) e4)) (= (op e0 e5) e5))) (and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5))))))))
(set .c19 (and :clauses (.c18) :conclusion ((and (and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))) (or (or (or (or (or (= (op e1 e5) e0) (= e1 (op e1 e5))) (= (op e1 e5) e2)) (= (op e1 e5) e3)) (= e4 (op e1 e5))) (= e5 (op e1 e5)))))))
(set .c20 (and :clauses (.c19) :conclusion ((and (and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))) (or (or (or (or (or (= e0 (op e1 e4)) (= e1 (op e1 e4))) (= e2 (op e1 e4))) (= e3 (op e1 e4))) (= e4 (op e1 e4))) (= e5 (op e1 e4)))))))
(set .c21 (and :clauses (.c20) :conclusion ((and (and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))) (or (or (or (or (or (= (op e1 e3) e0) (= (op e1 e3) e1)) (= (op e1 e3) e2)) (= (op e1 e3) e3)) (= (op e1 e3) e4)) (= e5 (op e1 e3)))))))
(set .c22 (and :clauses (.c21) :conclusion ((and (and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))) (or (or (or (or (or (= e0 (op e1 e2)) (= e1 (op e1 e2))) (= e2 (op e1 e2))) (= e3 (op e1 e2))) (= e4 (op e1 e2))) (= e5 (op e1 e2)))))))
(set .c23 (and :clauses (.c22) :conclusion ((and (or (or (or (or (or (= e0 (op e1 e0)) (= e1 (op e1 e0))) (= (op e1 e0) e2)) (= e3 (op e1 e0))) (= e4 (op e1 e0))) (= e5 (op e1 e0))) (or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))))))
(set .c24 (and :clauses (.c23) :conclusion ((or (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1))))))
(set .c25 (or_pos :conclusion ((not (or (= (op e1 e1) e0) (= e1 (op e1 e1)))) (= (op e1 e1) e0) (= e1 (op e1 e1)))))
(set .c26 (or_pos :conclusion ((not (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2))) (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2))))
(set .c27 (or_pos :conclusion ((not (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3))) (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3))))
(set .c28 (or_pos :conclusion ((not (or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1)))) (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1)))))
(set .c29 (or :clauses (.c24) :conclusion ((or (or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (= e4 (op e1 e1))) (= e5 (op e1 e1)))))
(set .c30 (and :clauses (.c17) :conclusion ((and (and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))) (or (or (or (or (or (= (op e2 e5) e0) (= e1 (op e2 e5))) (= (op e2 e5) e2)) (= (op e2 e5) e3)) (= e4 (op e2 e5))) (= e5 (op e2 e5)))))))
(set .c31 (and :clauses (.c30) :conclusion ((and (and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))) (or (or (or (or (or (= e0 (op e2 e4)) (= e1 (op e2 e4))) (= e2 (op e2 e4))) (= e3 (op e2 e4))) (= e4 (op e2 e4))) (= e5 (op e2 e4)))))))
(set .c32 (and :clauses (.c31) :conclusion ((and (and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))) (or (or (or (or (or (= e0 (op e2 e3)) (= e1 (op e2 e3))) (= (op e2 e3) e2)) (= e3 (op e2 e3))) (= e4 (op e2 e3))) (= e5 (op e2 e3)))))))
(set .c33 (and :clauses (.c32) :conclusion ((and (and (or (or (or (or (or (= (op e2 e0) e0) (= e1 (op e2 e0))) (= (op e2 e0) e2)) (= (op e2 e0) e3)) (= e4 (op e2 e0))) (= e5 (op e2 e0))) (or (or (or (or (or (= (op e2 e1) e0) (= e1 (op e2 e1))) (= (op e2 e1) e2)) (= (op e2 e1) e3)) (= e4 (op e2 e1))) (= e5 (op e2 e1)))) (or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))))))
(set .c34 (and :clauses (.c33) :conclusion ((or (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2))))))
(set .c35 (or_pos :conclusion ((not (or (= e0 (op e2 e2)) (= e1 (op e2 e2)))) (= e0 (op e2 e2)) (= e1 (op e2 e2)))))
(set .c36 (or_pos :conclusion ((not (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2)))) (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2)))))
(set .c37 (or_pos :conclusion ((not (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2)))) (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2)))))
(set .c38 (or_pos :conclusion ((not (or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2)))) (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2)))))
(set .c39 (or :clauses (.c34) :conclusion ((or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))) (= e5 (op e2 e2)))))
(set .c40 (and :clauses (.c16) :conclusion ((and (and (and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))) (or (or (or (or (or (= e0 (op e3 e4)) (= e1 (op e3 e4))) (= (op e3 e4) e2)) (= e3 (op e3 e4))) (= e4 (op e3 e4))) (= e5 (op e3 e4)))) (or (or (or (or (or (= e0 (op e3 e5)) (= e1 (op e3 e5))) (= e2 (op e3 e5))) (= e3 (op e3 e5))) (= e4 (op e3 e5))) (= e5 (op e3 e5)))))))
(set .c41 (and :clauses (.c40) :conclusion ((and (and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))) (or (or (or (or (or (= e0 (op e3 e4)) (= e1 (op e3 e4))) (= (op e3 e4) e2)) (= e3 (op e3 e4))) (= e4 (op e3 e4))) (= e5 (op e3 e4)))))))
(set .c42 (and :clauses (.c41) :conclusion ((and (and (and (or (or (or (or (or (= e0 (op e3 e0)) (= e1 (op e3 e0))) (= (op e3 e0) e2)) (= e3 (op e3 e0))) (= e4 (op e3 e0))) (= e5 (op e3 e0))) (or (or (or (or (or (= e0 (op e3 e1)) (= e1 (op e3 e1))) (= e2 (op e3 e1))) (= e3 (op e3 e1))) (= e4 (op e3 e1))) (= e5 (op e3 e1)))) (or (or (or (or (or (= e0 (op e3 e2)) (= e1 (op e3 e2))) (= (op e3 e2) e2)) (= e3 (op e3 e2))) (= e4 (op e3 e2))) (= e5 (op e3 e2)))) (or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))))))
(set .c43 (and :clauses (.c42) :conclusion ((or (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3))))))
(set .c44 (or_pos :conclusion ((not (or (= e0 (op e3 e3)) (= e1 (op e3 e3)))) (= e0 (op e3 e3)) (= e1 (op e3 e3)))))
(set .c45 (or_pos :conclusion ((not (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2))) (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2))))
(set .c46 (or_pos :conclusion ((not (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3)))) (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3)))))
(set .c47 (or_pos :conclusion ((not (or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3)))) (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3)))))
(set .c48 (or :clauses (.c43) :conclusion ((or (or (or (or (= e0 (op e3 e3)) (= e1 (op e3 e3))) (= (op e3 e3) e2)) (= e3 (op e3 e3))) (= e4 (op e3 e3))) (= e5 (op e3 e3)))))
(set .c49 (and :clauses (.c15) :conclusion ((and (and (and (and (and (or (or (or (or (or (= e0 (op e4 e0)) (= e1 (op e4 e0))) (= e2 (op e4 e0))) (= e3 (op e4 e0))) (= e4 (op e4 e0))) (= e5 (op e4 e0))) (or (or (or (or (or (= e0 (op e4 e1)) (= e1 (op e4 e1))) (= (op e4 e1) e2)) (= e3 (op e4 e1))) (= e4 (op e4 e1))) (= e5 (op e4 e1)))) (or (or (or (or (or (= e0 (op e4 e2)) (= e1 (op e4 e2))) (= (op e4 e2) e2)) (= e3 (op e4 e2))) (= e4 (op e4 e2))) (= e5 (op e4 e2)))) (or (or (or (or (or (= e0 (op e4 e3)) (= e1 (op e4 e3))) (= (op e4 e3) e2)) (= e3 (op e4 e3))) (= e4 (op e4 e3))) (= e5 (op e4 e3)))) (or (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4)))) (or (or (or (or (or (= e0 (op e4 e5)) (= e1 (op e4 e5))) (= e2 (op e4 e5))) (= e3 (op e4 e5))) (= e4 (op e4 e5))) (= e5 (op e4 e5)))))))
(set .c50 (and :clauses (.c49) :conclusion ((and (and (and (and (or (or (or (or (or (= e0 (op e4 e0)) (= e1 (op e4 e0))) (= e2 (op e4 e0))) (= e3 (op e4 e0))) (= e4 (op e4 e0))) (= e5 (op e4 e0))) (or (or (or (or (or (= e0 (op e4 e1)) (= e1 (op e4 e1))) (= (op e4 e1) e2)) (= e3 (op e4 e1))) (= e4 (op e4 e1))) (= e5 (op e4 e1)))) (or (or (or (or (or (= e0 (op e4 e2)) (= e1 (op e4 e2))) (= (op e4 e2) e2)) (= e3 (op e4 e2))) (= e4 (op e4 e2))) (= e5 (op e4 e2)))) (or (or (or (or (or (= e0 (op e4 e3)) (= e1 (op e4 e3))) (= (op e4 e3) e2)) (= e3 (op e4 e3))) (= e4 (op e4 e3))) (= e5 (op e4 e3)))) (or (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4)))))))
(set .c51 (and :clauses (.c50) :conclusion ((or (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4))))))
(set .c52 (or_pos :conclusion ((not (or (= (op e4 e4) e0) (= e1 (op e4 e4)))) (= (op e4 e4) e0) (= e1 (op e4 e4)))))
(set .c53 (or_pos :conclusion ((not (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2))) (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2))))
(set .c54 (or_pos :conclusion ((not (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4)))) (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4)))))
(set .c55 (or_pos :conclusion ((not (or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4)))) (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4)))))
(set .c56 (or :clauses (.c51) :conclusion ((or (or (or (or (= (op e4 e4) e0) (= e1 (op e4 e4))) (= (op e4 e4) e2)) (= e3 (op e4 e4))) (= e4 (op e4 e4))) (= e5 (op e4 e4)))))
(set .c57 (and :clauses (.c12) :conclusion ((and (and (and (and (and (or (or (or (or (or (= e0 (op e5 e0)) (= e1 (op e5 e0))) (= (op e5 e0) e2)) (= e3 (op e5 e0))) (= e4 (op e5 e0))) (= e5 (op e5 e0))) (or (or (or (or (or (= e0 (op e5 e1)) (= e1 (op e5 e1))) (= (op e5 e1) e2)) (= e3 (op e5 e1))) (= e4 (op e5 e1))) (= e5 (op e5 e1)))) (or (or (or (or (or (= (op e5 e2) e0) (= e1 (op e5 e2))) (= (op e5 e2) e2)) (= (op e5 e2) e3)) (= e4 (op e5 e2))) (= e5 (op e5 e2)))) (or (or (or (or (or (= (op e5 e3) e0) (= e1 (op e5 e3))) (= (op e5 e3) e2)) (= (op e5 e3) e3)) (= e4 (op e5 e3))) (= e5 (op e5 e3)))) (or (or (or (or (or (= e0 (op e5 e4)) (= e1 (op e5 e4))) (= e2 (op e5 e4))) (= e3 (op e5 e4))) (= e4 (op e5 e4))) (= e5 (op e5 e4)))) (or (or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4)) (= (op e5 e5) e5))))))
(set .c58 (and :clauses (.c57) :conclusion ((or (or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4)) (= (op e5 e5) e5)))))
(set .c59 (or_pos :conclusion ((not (or (= (op e5 e5) e0) (= (op e5 e5) e1))) (= (op e5 e5) e0) (= (op e5 e5) e1))))
(set .c60 (or_pos :conclusion ((not (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2))) (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2))))
(set .c61 (or_pos :conclusion ((not (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3))) (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3))))
(set .c62 (or_pos :conclusion ((not (or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4))) (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4))))
(set .c63 (or :clauses (.c58) :conclusion ((or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4)) (= (op e5 e5) e5))))
(set .c64 (and :clauses (.c2) :conclusion ((and (and (and (and (and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))) (and (= (op unit e2) e2) (= (op e2 unit) e2))) (and (= e3 (op unit e3)) (= e3 (op e3 unit)))) (and (= e4 (op unit e4)) (= e4 (op e4 unit)))) (and (= e5 (op unit e5)) (= e5 (op e5 unit)))))))
(set .c65 (and :clauses (.c64) :conclusion ((and (and (and (and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))) (and (= (op unit e2) e2) (= (op e2 unit) e2))) (and (= e3 (op unit e3)) (= e3 (op e3 unit)))) (and (= e4 (op unit e4)) (= e4 (op e4 unit)))))))
(set .c66 (and :clauses (.c65) :conclusion ((and (and (and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))) (and (= (op unit e2) e2) (= (op e2 unit) e2))) (and (= e3 (op unit e3)) (= e3 (op e3 unit)))))))
(set .c67 (and :clauses (.c66) :conclusion ((and (and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))) (and (= (op unit e2) e2) (= (op e2 unit) e2))))))
(set .c68 (and :clauses (.c67) :conclusion ((and (and (= e0 (op unit e0)) (= e0 (op e0 unit))) (and (= e1 (op unit e1)) (= (op e1 unit) e1))))))
(set .c69 (and :clauses (.c68) :conclusion ((and (= e0 (op unit e0)) (= e0 (op e0 unit))))))
(set .c70 (and :clauses (.c69) :conclusion ((= e0 (op e0 unit)))))
(set .c71 (and :clauses (.c68) :conclusion ((and (= e1 (op unit e1)) (= (op e1 unit) e1)))))
(set .c72 (and :clauses (.c71) :conclusion ((= e1 (op unit e1)))))
(set .c73 (and :clauses (.c71) :conclusion ((= (op e1 unit) e1))))
(set .c74 (and :clauses (.c67) :conclusion ((and (= (op unit e2) e2) (= (op e2 unit) e2)))))
(set .c75 (and :clauses (.c74) :conclusion ((= (op unit e2) e2))))
(set .c76 (and :clauses (.c74) :conclusion ((= (op e2 unit) e2))))
(set .c77 (and :clauses (.c66) :conclusion ((and (= e3 (op unit e3)) (= e3 (op e3 unit))))))
(set .c78 (and :clauses (.c77) :conclusion ((= e3 (op unit e3)))))
(set .c79 (and :clauses (.c77) :conclusion ((= e3 (op e3 unit)))))
(set .c80 (and :clauses (.c65) :conclusion ((and (= e4 (op unit e4)) (= e4 (op e4 unit))))))
(set .c81 (and :clauses (.c80) :conclusion ((= e4 (op unit e4)))))
(set .c82 (and :clauses (.c80) :conclusion ((= e4 (op e4 unit)))))
(set .c83 (and :clauses (.c64) :conclusion ((and (= e5 (op unit e5)) (= e5 (op e5 unit))))))
(set .c84 (and :clauses (.c83) :conclusion ((= e5 (op unit e5)))))
(set .c85 (and :clauses (.c83) :conclusion ((= e5 (op e5 unit)))))
(set .c86 (and :clauses (.c13) :conclusion ((or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))) (and (= e5 (op e5 (op e5 e5))) (not (= e5 unit)))))))
(set .c87 (and_pos :conclusion ((not (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit)))) (not (= e0 unit)))))
(set .c88 (and_pos :conclusion ((not (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (= e1 (op e1 (op e1 e1))))))
(set .c89 (or_pos :conclusion ((not (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit))))) (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit))))))
(set .c90 (and_pos :conclusion ((not (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (= (op e2 (op e2 e2)) e2))))
(set .c91 (or_pos :conclusion ((not (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2))))) (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2))))))
(set .c92 (and_pos :conclusion ((not (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (= (op e3 (op e3 e3)) e3))))
(set .c93 (or_pos :conclusion ((not (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit))))) (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit))))))
(set .c94 (and_pos :conclusion ((not (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))) (= e4 (op e4 (op e4 e4))))))
(set .c95 (or_pos :conclusion ((not (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit))))) (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit))))))
(set .c96 (and_pos :conclusion ((not (and (= e5 (op e5 (op e5 e5))) (not (= e5 unit)))) (= e5 (op e5 (op e5 e5))))))
(set .c97 (or :clauses (.c86) :conclusion ((or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))) (and (= e5 (op e5 (op e5 e5))) (not (= e5 unit))))))
(set .c98 (and :clauses (.c13) :conclusion ((or (or (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))) (and (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))) (or (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e5) unit)))))))
(set .c99 (or_pos :conclusion ((not (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))))
(set .c100 (and_pos :conclusion ((not (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit)))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit)))))
(set .c101 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit)))) (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))))))
(set .c102 (or_pos :conclusion ((not (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))))
(set .c103 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit)))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit)))))
(set .c104 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0))))) (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))))))
(set .c105 (or_pos :conclusion ((not (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))))
(set .c106 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0))))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0))))))
(set .c107 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0))))) (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))))))
(set .c108 (or_pos :conclusion ((not (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))))
(set .c109 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0))))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0))))))
(set .c110 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit)))) (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))))))
(set .c111 (or_pos :conclusion ((not (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))))
(set .c112 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit)))))
(set .c113 (or_pos :conclusion ((not (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit))) (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit))))
(set .c114 (and_pos :conclusion ((not (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit)))) (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)))))
(set .c115 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit)))) (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))))))
(set .c116 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1))))) (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))))))
(set .c117 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1))))) (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))))))
(set .c118 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))))))
(set .c119 (or_pos :conclusion ((not (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit))))) (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit))))))
(set .c120 (or_pos :conclusion ((not (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit))) (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit))))
(set .c121 (and_pos :conclusion ((not (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2))))) (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)))))
(set .c122 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2))))) (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))))))
(set .c123 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2))))) (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))))))
(set .c124 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit)))) (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))))))
(set .c125 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))))))
(set .c126 (or_pos :conclusion ((not (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit))))) (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit))))))
(set .c127 (or_pos :conclusion ((not (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit))) (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit))))
(set .c128 (and_pos :conclusion ((not (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit)))) (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)))))
(set .c129 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit)))) (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))))))
(set .c130 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit)))) (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))))))
(set .c131 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit)))) (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))))))
(set .c132 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))))))
(set .c133 (or_pos :conclusion ((not (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit))))) (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit))))))
(set .c134 (or_pos :conclusion ((not (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit))) (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit))))
(set .c135 (and_pos :conclusion ((not (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4))))) (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)))))
(set .c136 (and_pos :conclusion ((not (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4))))) (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))))))
(set .c137 (and_pos :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit)))) (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))))))
(set .c138 (and_pos :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit)))) (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))))))
(set .c139 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))) (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))))))
(set .c140 (or_pos :conclusion ((not (or (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4)))))) (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4)))))))
(set .c141 (or_pos :conclusion ((not (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit))) (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit))))
(set .c142 (and_pos :conclusion ((not (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit)))) (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)))))
(set .c143 (and_pos :conclusion ((not (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit)))) (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))))))
(set .c144 (and_pos :conclusion ((not (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5))))) (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))))))
(set .c145 (and_pos :conclusion ((not (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5))))) (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))))))
(set .c146 (and_pos :conclusion ((not (and (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))) (or (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e5) unit)))) (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))))))
(set .c147 (or :clauses (.c98) :conclusion ((or (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))) (and (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))) (or (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e5) unit))))))
(set .c148 (and :clauses (.c14) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))) (not (= (op e5 e3) (op e4 e3))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))) (not (= (op e3 e4) (op e5 e4)))) (not (= (op e4 e4) (op e5 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))) (not (= (op e3 e5) (op e4 e5)))) (not (= (op e5 e5) (op e3 e5)))) (not (= (op e5 e5) (op e4 e5))))))))
(set .c149 (and :clauses (.c148) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))) (not (= (op e5 e3) (op e4 e3))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))) (not (= (op e3 e4) (op e5 e4)))) (not (= (op e4 e4) (op e5 e4))))))))
(set .c150 (and :clauses (.c149) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))) (not (= (op e5 e3) (op e4 e3))))))))
(set .c151 (and :clauses (.c150) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2))))))))
(set .c152 (and :clauses (.c151) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1))))))))
(set .c153 (and :clauses (.c152) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))) (not (= (op e5 e0) (op e4 e0)))))))
(set .c154 (and :clauses (.c153) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))) (not (= (op e5 e0) (op e3 e0)))))))
(set .c155 (and :clauses (.c154) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))) (not (= (op e3 e0) (op e4 e0)))))))
(set .c156 (and :clauses (.c155) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e2 e0) (op e5 e0)))))))
(set .c157 (and :clauses (.c156) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))))))
(set .c158 (and :clauses (.c157) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))) (not (= (op e2 e0) (op e3 e0)))))))
(set .c159 (and :clauses (.c158) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e5 e0) (op e1 e0)))))))
(set .c160 (and :clauses (.c159) :conclusion ((and (and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))))))
(set .c161 (and :clauses (.c160) :conclusion ((and (and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))) (not (= (op e1 e0) (op e3 e0)))))))
(set .c162 (and :clauses (.c161) :conclusion ((and (and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))) (not (= (op e2 e0) (op e1 e0)))))))
(set .c163 (and :clauses (.c162) :conclusion ((and (and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))) (not (= (op e5 e0) (op e0 e0)))))))
(set .c164 (and :clauses (.c163) :conclusion ((and (and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))) (not (= (op e4 e0) (op e0 e0)))))))
(set .c165 (and :clauses (.c164) :conclusion ((and (and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))) (not (= (op e3 e0) (op e0 e0)))))))
(set .c166 (and :clauses (.c165) :conclusion ((and (not (= (op e1 e0) (op e0 e0))) (not (= (op e2 e0) (op e0 e0)))))))
(set .c167 (and :clauses (.c166) :conclusion ((not (= (op e1 e0) (op e0 e0))))))
(set .c168 (and :clauses (.c166) :conclusion ((not (= (op e2 e0) (op e0 e0))))))
(set .c169 (and :clauses (.c165) :conclusion ((not (= (op e3 e0) (op e0 e0))))))
(set .c170 (and :clauses (.c164) :conclusion ((not (= (op e4 e0) (op e0 e0))))))
(set .c171 (and :clauses (.c163) :conclusion ((not (= (op e5 e0) (op e0 e0))))))
(set .c172 (and :clauses (.c152) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))) (not (= (op e5 e1) (op e4 e1)))))))
(set .c173 (and :clauses (.c172) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))) (not (= (op e5 e1) (op e3 e1)))))))
(set .c174 (and :clauses (.c173) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))) (not (= (op e4 e1) (op e3 e1)))))))
(set .c175 (and :clauses (.c174) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))) (not (= (op e2 e1) (op e5 e1)))))))
(set .c176 (and :clauses (.c175) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))) (not (= (op e2 e1) (op e4 e1)))))))
(set .c177 (and :clauses (.c176) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))) (not (= (op e2 e1) (op e3 e1)))))))
(set .c178 (and :clauses (.c177) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))) (not (= (op e1 e1) (op e5 e1)))))))
(set .c179 (and :clauses (.c178) :conclusion ((and (and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))) (not (= (op e1 e1) (op e4 e1)))))))
(set .c180 (and :clauses (.c179) :conclusion ((and (and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))) (not (= (op e1 e1) (op e3 e1)))))))
(set .c181 (and :clauses (.c180) :conclusion ((and (and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))) (not (= (op e2 e1) (op e1 e1)))))))
(set .c182 (and :clauses (.c181) :conclusion ((and (and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))) (not (= (op e0 e1) (op e5 e1)))))))
(set .c183 (and :clauses (.c182) :conclusion ((and (and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))) (not (= (op e0 e1) (op e4 e1)))))))
(set .c184 (and :clauses (.c183) :conclusion ((and (and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))) (not (= (op e0 e1) (op e3 e1)))))))
(set .c185 (and :clauses (.c184) :conclusion ((and (not (= (op e0 e1) (op e1 e1))) (not (= (op e0 e1) (op e2 e1)))))))
(set .c186 (and :clauses (.c185) :conclusion ((not (= (op e0 e1) (op e1 e1))))))
(set .c187 (and :clauses (.c151) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))) (not (= (op e5 e2) (op e4 e2)))))))
(set .c188 (and :clauses (.c187) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))) (not (= (op e5 e2) (op e3 e2)))))))
(set .c189 (and :clauses (.c188) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))) (not (= (op e4 e2) (op e3 e2)))))))
(set .c190 (and :clauses (.c189) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))) (not (= (op e5 e2) (op e2 e2)))))))
(set .c191 (and :clauses (.c190) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))) (not (= (op e4 e2) (op e2 e2)))))))
(set .c192 (and :clauses (.c191) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))) (not (= (op e3 e2) (op e2 e2)))))))
(set .c193 (and :clauses (.c192) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))) (not (= (op e5 e2) (op e1 e2)))))))
(set .c194 (and :clauses (.c193) :conclusion ((and (and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))) (not (= (op e4 e2) (op e1 e2)))))))
(set .c195 (and :clauses (.c194) :conclusion ((and (and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))) (not (= (op e3 e2) (op e1 e2)))))))
(set .c196 (and :clauses (.c195) :conclusion ((and (and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))) (not (= (op e2 e2) (op e1 e2)))))))
(set .c197 (and :clauses (.c196) :conclusion ((and (and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))) (not (= (op e5 e2) (op e0 e2)))))))
(set .c198 (and :clauses (.c197) :conclusion ((and (and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))) (not (= (op e0 e2) (op e4 e2)))))))
(set .c199 (and :clauses (.c198) :conclusion ((and (and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 e2) (op e3 e2)))))))
(set .c200 (and :clauses (.c199) :conclusion ((and (not (= (op e0 e2) (op e1 e2))) (not (= (op e0 e2) (op e2 e2)))))))
(set .c201 (and :clauses (.c200) :conclusion ((not (= (op e0 e2) (op e2 e2))))))
(set .c202 (and :clauses (.c150) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))) (not (= (op e5 e3) (op e4 e3)))))))
(set .c203 (and :clauses (.c202) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))) (not (= (op e5 e3) (op e3 e3)))))))
(set .c204 (and :clauses (.c203) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))) (not (= (op e3 e3) (op e4 e3)))))))
(set .c205 (and :clauses (.c204) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))) (not (= (op e5 e3) (op e2 e3)))))))
(set .c206 (and :clauses (.c205) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))) (not (= (op e2 e3) (op e4 e3)))))))
(set .c207 (and :clauses (.c206) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))) (not (= (op e3 e3) (op e2 e3)))))))
(set .c208 (and :clauses (.c207) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))) (not (= (op e1 e3) (op e5 e3)))))))
(set .c209 (and :clauses (.c208) :conclusion ((and (and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))) (not (= (op e1 e3) (op e4 e3)))))))
(set .c210 (and :clauses (.c209) :conclusion ((and (and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))) (not (= (op e1 e3) (op e3 e3)))))))
(set .c211 (and :clauses (.c210) :conclusion ((and (and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))) (not (= (op e1 e3) (op e2 e3)))))))
(set .c212 (and :clauses (.c211) :conclusion ((and (and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))) (not (= (op e5 e3) (op e0 e3)))))))
(set .c213 (and :clauses (.c212) :conclusion ((and (and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))) (not (= (op e4 e3) (op e0 e3)))))))
(set .c214 (and :clauses (.c213) :conclusion ((and (and (not (= (op e1 e3) (op e0 e3))) (not (= (op e2 e3) (op e0 e3)))) (not (= (op e3 e3) (op e0 e3)))))))
(set .c215 (and :clauses (.c214) :conclusion ((not (= (op e3 e3) (op e0 e3))))))
(set .c216 (and :clauses (.c149) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))) (not (= (op e3 e4) (op e5 e4)))) (not (= (op e4 e4) (op e5 e4)))))))
(set .c217 (and :clauses (.c216) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))) (not (= (op e3 e4) (op e5 e4)))))))
(set .c218 (and :clauses (.c217) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))) (not (= (op e4 e4) (op e3 e4)))))))
(set .c219 (and :clauses (.c218) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))) (not (= (op e5 e4) (op e2 e4)))))))
(set .c220 (and :clauses (.c219) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))) (not (= (op e4 e4) (op e2 e4)))))))
(set .c221 (and :clauses (.c220) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))) (not (= (op e3 e4) (op e2 e4)))))))
(set .c222 (and :clauses (.c221) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))) (not (= (op e1 e4) (op e5 e4)))))))
(set .c223 (and :clauses (.c222) :conclusion ((and (and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))) (not (= (op e4 e4) (op e1 e4)))))))
(set .c224 (and :clauses (.c223) :conclusion ((and (and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))) (not (= (op e3 e4) (op e1 e4)))))))
(set .c225 (and :clauses (.c224) :conclusion ((and (and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))) (not (= (op e1 e4) (op e2 e4)))))))
(set .c226 (and :clauses (.c225) :conclusion ((and (and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))) (not (= (op e0 e4) (op e5 e4)))))))
(set .c227 (and :clauses (.c226) :conclusion ((and (and (and (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 e4) (op e2 e4)))) (not (= (op e0 e4) (op e3 e4)))) (not (= (op e0 e4) (op e4 e4)))))))
(set .c228 (and :clauses (.c227) :conclusion ((not (= (op e0 e4) (op e4 e4))))))
(set .c229 (and :clauses (.c148) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))) (not (= (op e3 e5) (op e4 e5)))) (not (= (op e5 e5) (op e3 e5)))) (not (= (op e5 e5) (op e4 e5)))))))
(set .c230 (and :clauses (.c229) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))) (not (= (op e3 e5) (op e4 e5)))) (not (= (op e5 e5) (op e3 e5)))))))
(set .c231 (and :clauses (.c230) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))) (not (= (op e3 e5) (op e4 e5)))))))
(set .c232 (and :clauses (.c231) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))) (not (= (op e5 e5) (op e2 e5)))))))
(set .c233 (and :clauses (.c232) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))) (not (= (op e2 e5) (op e4 e5)))))))
(set .c234 (and :clauses (.c233) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))) (not (= (op e2 e5) (op e3 e5)))))))
(set .c235 (and :clauses (.c234) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))) (not (= (op e5 e5) (op e1 e5)))))))
(set .c236 (and :clauses (.c235) :conclusion ((and (and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))) (not (= (op e1 e5) (op e4 e5)))))))
(set .c237 (and :clauses (.c236) :conclusion ((and (and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))) (not (= (op e1 e5) (op e3 e5)))))))
(set .c238 (and :clauses (.c237) :conclusion ((and (and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))) (not (= (op e1 e5) (op e2 e5)))))))
(set .c239 (and :clauses (.c238) :conclusion ((and (and (and (and (not (= (op e0 e5) (op e1 e5))) (not (= (op e0 e5) (op e2 e5)))) (not (= (op e0 e5) (op e3 e5)))) (not (= (op e0 e5) (op e4 e5)))) (not (= (op e0 e5) (op e5 e5)))))))
(set .c240 (and :clauses (.c239) :conclusion ((not (= (op e0 e5) (op e5 e5))))))
(set .c241 (and :clauses (.c14) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))) (not (= (op e3 e4) (op e3 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))) (not (= (op e4 e3) (op e4 e5)))) (not (= (op e4 e4) (op e4 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))) (not (= (op e5 e3) (op e5 e4)))) (not (= (op e5 e5) (op e5 e3)))) (not (= (op e5 e5) (op e5 e4))))))))
(set .c242 (and :clauses (.c241) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))) (not (= (op e3 e4) (op e3 e5))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))) (not (= (op e4 e3) (op e4 e5)))) (not (= (op e4 e4) (op e4 e5))))))))
(set .c243 (and :clauses (.c242) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))) (not (= (op e3 e4) (op e3 e5))))))))
(set .c244 (and :clauses (.c243) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4))))))))
(set .c245 (and :clauses (.c244) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e0 e1) (op e0 e0))) (not (= (op e0 e2) (op e0 e0)))) (not (= (op e0 e3) (op e0 e0)))) (not (= (op e0 e4) (op e0 e0)))) (not (= (op e0 e5) (op e0 e0)))) (not (= (op e0 e1) (op e0 e2)))) (not (= (op e0 e1) (op e0 e3)))) (not (= (op e0 e1) (op e0 e4)))) (not (= (op e0 e5) (op e0 e1)))) (not (= (op e0 e2) (op e0 e3)))) (not (= (op e0 e2) (op e0 e4)))) (not (= (op e0 e5) (op e0 e2)))) (not (= (op e0 e4) (op e0 e3)))) (not (= (op e0 e5) (op e0 e3)))) (not (= (op e0 e5) (op e0 e4)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4))))))))
(set .c246 (and :clauses (.c245) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))) (not (= (op e1 e5) (op e1 e4)))))))
(set .c247 (and :clauses (.c246) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))) (not (= (op e1 e3) (op e1 e5)))))))
(set .c248 (and :clauses (.c247) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))) (not (= (op e1 e3) (op e1 e4)))))))
(set .c249 (and :clauses (.c248) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))) (not (= (op e1 e5) (op e1 e2)))))))
(set .c250 (and :clauses (.c249) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))) (not (= (op e1 e4) (op e1 e2)))))))
(set .c251 (and :clauses (.c250) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))) (not (= (op e1 e3) (op e1 e2)))))))
(set .c252 (and :clauses (.c251) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))) (not (= (op e1 e1) (op e1 e5)))))))
(set .c253 (and :clauses (.c252) :conclusion ((and (and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))) (not (= (op e1 e1) (op e1 e4)))))))
(set .c254 (and :clauses (.c253) :conclusion ((and (and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))) (not (= (op e1 e3) (op e1 e1)))))))
(set .c255 (and :clauses (.c254) :conclusion ((and (and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))) (not (= (op e1 e1) (op e1 e2)))))))
(set .c256 (and :clauses (.c255) :conclusion ((and (and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))) (not (= (op e1 e5) (op e1 e0)))))))
(set .c257 (and :clauses (.c256) :conclusion ((and (and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))) (not (= (op e1 e0) (op e1 e4)))))))
(set .c258 (and :clauses (.c257) :conclusion ((and (and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))) (not (= (op e1 e3) (op e1 e0)))))))
(set .c259 (and :clauses (.c258) :conclusion ((and (not (= (op e1 e1) (op e1 e0))) (not (= (op e1 e0) (op e1 e2)))))))
(set .c260 (and :clauses (.c259) :conclusion ((not (= (op e1 e0) (op e1 e2))))))
(set .c261 (and :clauses (.c258) :conclusion ((not (= (op e1 e3) (op e1 e0))))))
(set .c262 (and :clauses (.c257) :conclusion ((not (= (op e1 e0) (op e1 e4))))))
(set .c263 (and :clauses (.c256) :conclusion ((not (= (op e1 e5) (op e1 e0))))))
(set .c264 (and :clauses (.c244) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))) (not (= (op e2 e5) (op e2 e4)))))))
(set .c265 (and :clauses (.c264) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))) (not (= (op e2 e5) (op e2 e3)))))))
(set .c266 (and :clauses (.c265) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))) (not (= (op e2 e3) (op e2 e4)))))))
(set .c267 (and :clauses (.c266) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))) (not (= (op e2 e5) (op e2 e2)))))))
(set .c268 (and :clauses (.c267) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))) (not (= (op e2 e2) (op e2 e4)))))))
(set .c269 (and :clauses (.c268) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))) (not (= (op e2 e3) (op e2 e2)))))))
(set .c270 (and :clauses (.c269) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))) (not (= (op e2 e1) (op e2 e5)))))))
(set .c271 (and :clauses (.c270) :conclusion ((and (and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))) (not (= (op e2 e1) (op e2 e4)))))))
(set .c272 (and :clauses (.c271) :conclusion ((and (and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))) (not (= (op e2 e1) (op e2 e3)))))))
(set .c273 (and :clauses (.c272) :conclusion ((and (and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))) (not (= (op e2 e1) (op e2 e2)))))))
(set .c274 (and :clauses (.c273) :conclusion ((and (and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))) (not (= (op e2 e0) (op e2 e5)))))))
(set .c275 (and :clauses (.c274) :conclusion ((and (and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))) (not (= (op e2 e0) (op e2 e4)))))))
(set .c276 (and :clauses (.c275) :conclusion ((and (and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))) (not (= (op e2 e0) (op e2 e3)))))))
(set .c277 (and :clauses (.c276) :conclusion ((and (not (= (op e2 e1) (op e2 e0))) (not (= (op e2 e0) (op e2 e2)))))))
(set .c278 (and :clauses (.c277) :conclusion ((not (= (op e2 e1) (op e2 e0))))))
(set .c279 (and :clauses (.c276) :conclusion ((not (= (op e2 e0) (op e2 e3))))))
(set .c280 (and :clauses (.c275) :conclusion ((not (= (op e2 e0) (op e2 e4))))))
(set .c281 (and :clauses (.c274) :conclusion ((not (= (op e2 e0) (op e2 e5))))))
(set .c282 (and :clauses (.c243) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))) (not (= (op e3 e4) (op e3 e5)))))))
(set .c283 (and :clauses (.c282) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))) (not (= (op e3 e3) (op e3 e5)))))))
(set .c284 (and :clauses (.c283) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))) (not (= (op e3 e3) (op e3 e4)))))))
(set .c285 (and :clauses (.c284) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))) (not (= (op e3 e2) (op e3 e5)))))))
(set .c286 (and :clauses (.c285) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))) (not (= (op e3 e4) (op e3 e2)))))))
(set .c287 (and :clauses (.c286) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))) (not (= (op e3 e3) (op e3 e2)))))))
(set .c288 (and :clauses (.c287) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))) (not (= (op e3 e1) (op e3 e5)))))))
(set .c289 (and :clauses (.c288) :conclusion ((and (and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))) (not (= (op e3 e4) (op e3 e1)))))))
(set .c290 (and :clauses (.c289) :conclusion ((and (and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))) (not (= (op e3 e3) (op e3 e1)))))))
(set .c291 (and :clauses (.c290) :conclusion ((and (and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))) (not (= (op e3 e2) (op e3 e1)))))))
(set .c292 (and :clauses (.c291) :conclusion ((and (and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))) (not (= (op e3 e0) (op e3 e5)))))))
(set .c293 (and :clauses (.c292) :conclusion ((and (and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))) (not (= (op e3 e4) (op e3 e0)))))))
(set .c294 (and :clauses (.c293) :conclusion ((and (and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))) (not (= (op e3 e3) (op e3 e0)))))))
(set .c295 (and :clauses (.c294) :conclusion ((and (not (= (op e3 e0) (op e3 e1))) (not (= (op e3 e2) (op e3 e0)))))))
(set .c296 (and :clauses (.c295) :conclusion ((not (= (op e3 e0) (op e3 e1))))))
(set .c297 (and :clauses (.c295) :conclusion ((not (= (op e3 e2) (op e3 e0))))))
(set .c298 (and :clauses (.c293) :conclusion ((not (= (op e3 e4) (op e3 e0))))))
(set .c299 (and :clauses (.c292) :conclusion ((not (= (op e3 e0) (op e3 e5))))))
(set .c300 (and :clauses (.c242) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))) (not (= (op e4 e3) (op e4 e5)))) (not (= (op e4 e4) (op e4 e5)))))))
(set .c301 (and :clauses (.c300) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))) (not (= (op e4 e3) (op e4 e5)))))))
(set .c302 (and :clauses (.c301) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))) (not (= (op e4 e4) (op e4 e3)))))))
(set .c303 (and :clauses (.c302) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))) (not (= (op e4 e2) (op e4 e5)))))))
(set .c304 (and :clauses (.c303) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))) (not (= (op e4 e4) (op e4 e2)))))))
(set .c305 (and :clauses (.c304) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))) (not (= (op e4 e2) (op e4 e3)))))))
(set .c306 (and :clauses (.c305) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))) (not (= (op e4 e1) (op e4 e5)))))))
(set .c307 (and :clauses (.c306) :conclusion ((and (and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))) (not (= (op e4 e4) (op e4 e1)))))))
(set .c308 (and :clauses (.c307) :conclusion ((and (and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))) (not (= (op e4 e3) (op e4 e1)))))))
(set .c309 (and :clauses (.c308) :conclusion ((and (and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))) (not (= (op e4 e2) (op e4 e1)))))))
(set .c310 (and :clauses (.c309) :conclusion ((and (and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))) (not (= (op e4 e0) (op e4 e5)))))))
(set .c311 (and :clauses (.c310) :conclusion ((and (and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))) (not (= (op e4 e4) (op e4 e0)))))))
(set .c312 (and :clauses (.c311) :conclusion ((and (and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))) (not (= (op e4 e3) (op e4 e0)))))))
(set .c313 (and :clauses (.c312) :conclusion ((and (not (= (op e4 e1) (op e4 e0))) (not (= (op e4 e2) (op e4 e0)))))))
(set .c314 (and :clauses (.c313) :conclusion ((not (= (op e4 e1) (op e4 e0))))))
(set .c315 (and :clauses (.c313) :conclusion ((not (= (op e4 e2) (op e4 e0))))))
(set .c316 (and :clauses (.c312) :conclusion ((not (= (op e4 e3) (op e4 e0))))))
(set .c317 (and :clauses (.c310) :conclusion ((not (= (op e4 e0) (op e4 e5))))))
(set .c318 (and :clauses (.c241) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))) (not (= (op e5 e3) (op e5 e4)))) (not (= (op e5 e5) (op e5 e3)))) (not (= (op e5 e5) (op e5 e4)))))))
(set .c319 (and :clauses (.c318) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))) (not (= (op e5 e3) (op e5 e4)))) (not (= (op e5 e5) (op e5 e3)))))))
(set .c320 (and :clauses (.c319) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))) (not (= (op e5 e3) (op e5 e4)))))))
(set .c321 (and :clauses (.c320) :conclusion ((and (and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))) (not (= (op e5 e5) (op e5 e2)))))))
(set .c322 (and :clauses (.c321) :conclusion ((and (and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))) (not (= (op e5 e2) (op e5 e4)))))))
(set .c323 (and :clauses (.c322) :conclusion ((and (and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))) (not (= (op e5 e2) (op e5 e3)))))))
(set .c324 (and :clauses (.c323) :conclusion ((and (and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))) (not (= (op e5 e5) (op e5 e1)))))))
(set .c325 (and :clauses (.c324) :conclusion ((and (and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))) (not (= (op e5 e1) (op e5 e4)))))))
(set .c326 (and :clauses (.c325) :conclusion ((and (and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))) (not (= (op e5 e3) (op e5 e1)))))))
(set .c327 (and :clauses (.c326) :conclusion ((and (and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))) (not (= (op e5 e2) (op e5 e1)))))))
(set .c328 (and :clauses (.c327) :conclusion ((and (and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))) (not (= (op e5 e5) (op e5 e0)))))))
(set .c329 (and :clauses (.c328) :conclusion ((and (and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))) (not (= (op e5 e0) (op e5 e4)))))))
(set .c330 (and :clauses (.c329) :conclusion ((and (and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))) (not (= (op e5 e3) (op e5 e0)))))))
(set .c331 (and :clauses (.c330) :conclusion ((and (not (= (op e5 e0) (op e5 e1))) (not (= (op e5 e2) (op e5 e0)))))))
(set .c332 (and :clauses (.c331) :conclusion ((not (= (op e5 e0) (op e5 e1))))))
(set .c333 (and :clauses (.c331) :conclusion ((not (= (op e5 e2) (op e5 e0))))))
(set .c334 (and :clauses (.c330) :conclusion ((not (= (op e5 e3) (op e5 e0))))))
(set .c335 (and :clauses (.c329) :conclusion ((not (= (op e5 e0) (op e5 e4))))))
(set .c336 (resolution :clauses (.c87 .c4) :conclusion ((not (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit)))))))
(set .c337 (eq_congruent :conclusion ((not (= e5 e5)) (not (= e0 unit)) (= (op e5 unit) (op e5 e0)))))
(set .c338 (eq_reflexive :conclusion ((= e5 e5))))
(set .c339 (resolution :clauses (.c337 .c338) :conclusion ((not (= e0 unit)) (= (op e5 unit) (op e5 e0)))))
(set .c340 (eq_congruent :conclusion ((not (= e4 e4)) (not (= e0 unit)) (= (op e4 e0) (op e4 unit)))))
(set .c341 (eq_reflexive :conclusion ((= e4 e4))))
(set .c342 (resolution :clauses (.c340 .c341) :conclusion ((not (= e0 unit)) (= (op e4 e0) (op e4 unit)))))
(set .c343 (eq_congruent :conclusion ((not (= e3 e3)) (not (= e0 unit)) (= (op e3 e0) (op e3 unit)))))
(set .c344 (eq_reflexive :conclusion ((= e3 e3))))
(set .c345 (resolution :clauses (.c343 .c344) :conclusion ((not (= e0 unit)) (= (op e3 e0) (op e3 unit)))))
(set .c346 (eq_congruent :conclusion ((not (= e2 e2)) (not (= e0 unit)) (= (op e2 unit) (op e2 e0)))))
(set .c347 (eq_reflexive :conclusion ((= e2 e2))))
(set .c348 (resolution :clauses (.c346 .c347) :conclusion ((not (= e0 unit)) (= (op e2 unit) (op e2 e0)))))
(set .c349 (eq_transitive :conclusion ((not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))) (= e5 (op e5 e0)))))
(set .c350 (eq_congruent :conclusion ((not (= e5 e5)) (not (= e5 (op e5 e0))) (= (op e5 e5) (op e5 (op e5 e0))))))
(set .c351 (resolution :clauses (.c350 .c338) :conclusion ((not (= e5 (op e5 e0))) (= (op e5 e5) (op e5 (op e5 e0))))))
(set .c352 (resolution :clauses (.c351 .c349) :conclusion ((= (op e5 e5) (op e5 (op e5 e0))) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))))))
(set .c353 (eq_transitive :conclusion ((not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= e4 (op e4 e0)))))
(set .c354 (eq_congruent :conclusion ((not (= e4 e4)) (not (= e4 (op e4 e0))) (= (op e4 e4) (op e4 (op e4 e0))))))
(set .c355 (resolution :clauses (.c354 .c341) :conclusion ((not (= e4 (op e4 e0))) (= (op e4 e4) (op e4 (op e4 e0))))))
(set .c356 (resolution :clauses (.c355 .c353) :conclusion ((= (op e4 e4) (op e4 (op e4 e0))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))))))
(set .c357 (eq_transitive :conclusion ((not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))) (= e3 (op e3 e0)))))
(set .c358 (eq_congruent :conclusion ((not (= e3 e3)) (not (= e3 (op e3 e0))) (= (op e3 e3) (op e3 (op e3 e0))))))
(set .c359 (resolution :clauses (.c358 .c344) :conclusion ((not (= e3 (op e3 e0))) (= (op e3 e3) (op e3 (op e3 e0))))))
(set .c360 (resolution :clauses (.c359 .c357) :conclusion ((= (op e3 e3) (op e3 (op e3 e0))) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))))))
(set .c361 (eq_transitive :conclusion ((not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)) (= (op e2 e0) e2))))
(set .c362 (eq_congruent :conclusion ((not (= e2 e2)) (not (= (op e2 e0) e2)) (= (op e2 (op e2 e0)) (op e2 e2)))))
(set .c363 (resolution :clauses (.c362 .c347) :conclusion ((not (= (op e2 e0) e2)) (= (op e2 (op e2 e0)) (op e2 e2)))))
(set .c364 (resolution :clauses (.c363 .c361) :conclusion ((= (op e2 (op e2 e0)) (op e2 e2)) (not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)))))
(set .c365 (eq_transitive :conclusion ((not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))) (= e1 (op e1 e0)))))
(set .c366 (eq_congruent :conclusion ((not (= e1 e1)) (not (= e0 unit)) (= (op e1 unit) (op e1 e0)))))
(set .c367 (eq_reflexive :conclusion ((= e1 e1))))
(set .c368 (resolution :clauses (.c366 .c367) :conclusion ((not (= e0 unit)) (= (op e1 unit) (op e1 e0)))))
(set .c369 (eq_congruent :conclusion ((not (= e1 e1)) (not (= e1 (op e1 e0))) (= (op e1 e1) (op e1 (op e1 e0))))))
(set .c370 (resolution :clauses (.c369 .c367) :conclusion ((not (= e1 (op e1 e0))) (= (op e1 e1) (op e1 (op e1 e0))))))
(set .c371 (resolution :clauses (.c370 .c365) :conclusion ((= (op e1 e1) (op e1 (op e1 e0))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))))))
(set .c372 (eq_transitive :conclusion ((not (= (op e1 e0) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c373 (eq_congruent :conclusion ((not (= e0 e0)) (not (= e0 unit)) (= (op e0 e0) (op e0 unit)))))
(set .c374 (eq_reflexive :conclusion ((= e0 e0))))
(set .c375 (resolution :clauses (.c373 .c374) :conclusion ((not (= e0 unit)) (= (op e0 e0) (op e0 unit)))))
(set .c376 (resolution :clauses (.c372 .c375) :conclusion ((not (= (op e1 e0) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c377 (resolution :clauses (.c376 .c70 .c4 .c167) :conclusion ((not (= (op e1 e0) unit)))))
(set .c378 (eq_congruent :conclusion ((not (= e0 unit)) (not (= e1 e1)) (= (op unit e1) (op e0 e1)))))
(set .c379 (resolution :clauses (.c378 .c367) :conclusion ((not (= e0 unit)) (= (op unit e1) (op e0 e1)))))
(set .c380 (eq_transitive :conclusion ((not (= e1 (op unit e1))) (not (= (op unit e1) (op e0 e1))) (= e1 (op e0 e1)))))
(set .c381 (eq_transitive :conclusion ((not (= (op e0 e5) (op unit e5))) (not (= e5 (op unit e5))) (not (= (op e5 e5) e5)) (= (op e0 e5) (op e5 e5)))))
(set .c382 (eq_congruent :conclusion ((not (= e0 unit)) (not (= e5 e5)) (= (op e0 e5) (op unit e5)))))
(set .c383 (resolution :clauses (.c382 .c338) :conclusion ((not (= e0 unit)) (= (op e0 e5) (op unit e5)))))
(set .c384 (resolution :clauses (.c381 .c383) :conclusion ((not (= e5 (op unit e5))) (not (= (op e5 e5) e5)) (= (op e0 e5) (op e5 e5)) (not (= e0 unit)))))
(set .c385 (resolution :clauses (.c384 .c84 .c4 .c240) :conclusion ((not (= (op e5 e5) e5)))))
(set .c386 (resolution :clauses (.c63 .c385) :conclusion ((or (or (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)) (= (op e5 e5) e3)) (= (op e5 e5) e4)))))
(set .c387 (eq_congruent :conclusion ((not (= e0 unit)) (not (= e3 e3)) (= (op e0 e3) (op unit e3)))))
(set .c388 (resolution :clauses (.c387 .c344) :conclusion ((not (= e0 unit)) (= (op e0 e3) (op unit e3)))))
(set .c389 (eq_congruent :conclusion ((not (= e0 unit)) (not (= e4 e4)) (= (op unit e4) (op e0 e4)))))
(set .c390 (resolution :clauses (.c389 .c341) :conclusion ((not (= e0 unit)) (= (op unit e4) (op e0 e4)))))
(set .c391 (eq_transitive :conclusion ((not (= (op unit e4) (op e0 e4))) (not (= e4 (op unit e4))) (not (= e4 (op e4 e4))) (= (op e0 e4) (op e4 e4)))))
(set .c392 (resolution :clauses (.c391 .c390) :conclusion ((not (= e4 (op unit e4))) (not (= e4 (op e4 e4))) (= (op e0 e4) (op e4 e4)) (not (= e0 unit)))))
(set .c393 (resolution :clauses (.c392 .c81 .c4 .c228) :conclusion ((not (= e4 (op e4 e4))))))
(set .c394 (eq_congruent :conclusion ((not (= e0 unit)) (not (= e2 e2)) (= (op e0 e2) (op unit e2)))))
(set .c395 (resolution :clauses (.c394 .c347) :conclusion ((not (= e0 unit)) (= (op e0 e2) (op unit e2)))))
(set .c396 (eq_transitive :conclusion ((not (= e3 (op e3 e3))) (not (= e3 (op unit e3))) (not (= (op e0 e3) (op unit e3))) (= (op e3 e3) (op e0 e3)))))
(set .c397 (resolution :clauses (.c396 .c388) :conclusion ((not (= e3 (op e3 e3))) (not (= e3 (op unit e3))) (= (op e3 e3) (op e0 e3)) (not (= e0 unit)))))
(set .c398 (resolution :clauses (.c397 .c78 .c4 .c215) :conclusion ((not (= e3 (op e3 e3))))))
(set .c399 (eq_transitive :conclusion ((not (= e0 (op e3 e3))) (not (= e0 unit)) (= (op e3 e3) unit))))
(set .c400 (resolution :clauses (.c399 .c4) :conclusion ((not (= e0 (op e3 e3))) (= (op e3 e3) unit))))
(set .c401 (eq_transitive :conclusion ((not (= (op e5 e0) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c402 (resolution :clauses (.c401 .c375) :conclusion ((not (= (op e5 e0) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c403 (resolution :clauses (.c402 .c70 .c4 .c171) :conclusion ((not (= (op e5 e0) unit)))))
(set .c404 (eq_transitive :conclusion ((not (= (op e0 e2) (op e0 (op e0 e2)))) (not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)) (= (op e0 (op e0 e2)) e2))))
(set .c405 (eq_congruent :conclusion ((not (= e0 e0)) (not (= (op e0 e2) e2)) (= (op e0 e2) (op e0 (op e0 e2))))))
(set .c406 (resolution :clauses (.c405 .c374) :conclusion ((not (= (op e0 e2) e2)) (= (op e0 e2) (op e0 (op e0 e2))))))
(set .c407 (eq_transitive :conclusion ((not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)) (= (op e0 e2) e2))))
(set .c408 (resolution :clauses (.c406 .c407) :conclusion ((= (op e0 e2) (op e0 (op e0 e2))) (not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)))))
(set .c409 (resolution :clauses (.c404 .c408) :conclusion ((not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)) (= (op e0 (op e0 e2)) e2))))
(set .c410 (resolution :clauses (.c409 .c395) :conclusion ((not (= (op unit e2) e2)) (= (op e0 (op e0 e2)) e2) (not (= e0 unit)))))
(set .c411 (resolution :clauses (.c410 .c75 .c4) :conclusion ((= (op e0 (op e0 e2)) e2))))
(set .c412 (eq_transitive :conclusion ((not (= (op e0 (op e0 e3)) (op e0 e3))) (not (= (op e0 e3) (op unit e3))) (not (= e3 (op unit e3))) (= (op e0 (op e0 e3)) e3))))
(set .c413 (eq_congruent :conclusion ((not (= e0 e0)) (not (= e3 (op e0 e3))) (= (op e0 (op e0 e3)) (op e0 e3)))))
(set .c414 (resolution :clauses (.c413 .c374) :conclusion ((not (= e3 (op e0 e3))) (= (op e0 (op e0 e3)) (op e0 e3)))))
(set .c415 (eq_transitive :conclusion ((not (= e3 (op unit e3))) (not (= (op e0 e3) (op unit e3))) (= e3 (op e0 e3)))))
(set .c416 (resolution :clauses (.c414 .c415) :conclusion ((= (op e0 (op e0 e3)) (op e0 e3)) (not (= e3 (op unit e3))) (not (= (op e0 e3) (op unit e3))))))
(set .c417 (resolution :clauses (.c412 .c416) :conclusion ((not (= (op e0 e3) (op unit e3))) (not (= e3 (op unit e3))) (= (op e0 (op e0 e3)) e3))))
(set .c418 (resolution :clauses (.c417 .c388) :conclusion ((not (= e3 (op unit e3))) (= (op e0 (op e0 e3)) e3) (not (= e0 unit)))))
(set .c419 (resolution :clauses (.c418 .c78 .c4) :conclusion ((= (op e0 (op e0 e3)) e3))))
(set .c420 (eq_transitive :conclusion ((not (= (op e0 (op e0 e4)) (op e0 e4))) (not (= (op unit e4) (op e0 e4))) (not (= e4 (op unit e4))) (= (op e0 (op e0 e4)) e4))))
(set .c421 (eq_congruent :conclusion ((not (= e0 e0)) (not (= e4 (op e0 e4))) (= (op e0 (op e0 e4)) (op e0 e4)))))
(set .c422 (resolution :clauses (.c421 .c374) :conclusion ((not (= e4 (op e0 e4))) (= (op e0 (op e0 e4)) (op e0 e4)))))
(set .c423 (eq_transitive :conclusion ((not (= e4 (op unit e4))) (not (= (op unit e4) (op e0 e4))) (= e4 (op e0 e4)))))
(set .c424 (resolution :clauses (.c422 .c423) :conclusion ((= (op e0 (op e0 e4)) (op e0 e4)) (not (= e4 (op unit e4))) (not (= (op unit e4) (op e0 e4))))))
(set .c425 (resolution :clauses (.c420 .c424) :conclusion ((not (= (op unit e4) (op e0 e4))) (not (= e4 (op unit e4))) (= (op e0 (op e0 e4)) e4))))
(set .c426 (resolution :clauses (.c425 .c390) :conclusion ((not (= e4 (op unit e4))) (= (op e0 (op e0 e4)) e4) (not (= e0 unit)))))
(set .c427 (resolution :clauses (.c426 .c81 .c4) :conclusion ((= (op e0 (op e0 e4)) e4))))
(set .c428 (eq_transitive :conclusion ((not (= e5 (op unit e5))) (not (= (op e0 e5) (op unit e5))) (not (= (op e0 e5) (op e0 (op e0 e5)))) (= e5 (op e0 (op e0 e5))))))
(set .c429 (resolution :clauses (.c428 .c383) :conclusion ((not (= e5 (op unit e5))) (not (= (op e0 e5) (op e0 (op e0 e5)))) (= e5 (op e0 (op e0 e5))) (not (= e0 unit)))))
(set .c430 (eq_congruent :conclusion ((not (= e0 e0)) (not (= (op e0 e5) e5)) (= (op e0 e5) (op e0 (op e0 e5))))))
(set .c431 (resolution :clauses (.c430 .c374) :conclusion ((not (= (op e0 e5) e5)) (= (op e0 e5) (op e0 (op e0 e5))))))
(set .c432 (eq_transitive :conclusion ((not (= (op e0 e5) (op unit e5))) (not (= e5 (op unit e5))) (= (op e0 e5) e5))))
(set .c433 (resolution :clauses (.c431 .c432) :conclusion ((= (op e0 e5) (op e0 (op e0 e5))) (not (= (op e0 e5) (op unit e5))) (not (= e5 (op unit e5))))))
(set .c434 (resolution :clauses (.c429 .c433) :conclusion ((not (= e5 (op unit e5))) (= e5 (op e0 (op e0 e5))) (not (= e0 unit)) (not (= (op e0 e5) (op unit e5))))))
(set .c435 (resolution :clauses (.c434 .c383) :conclusion ((not (= e5 (op unit e5))) (= e5 (op e0 (op e0 e5))) (not (= e0 unit)))))
(set .c436 (resolution :clauses (.c435 .c84 .c4) :conclusion ((= e5 (op e0 (op e0 e5))))))
(set .c437 (eq_transitive :conclusion ((not (= (op e5 unit) (op e5 e0))) (not (= e5 (op e5 unit))) (not (= e5 (op unit e5))) (not (= (op e0 e5) (op unit e5))) (not (= (op e0 e5) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c438 (resolution :clauses (.c437 .c339) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op unit e5))) (not (= (op e0 e5) (op unit e5))) (not (= (op e0 e5) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c439 (resolution :clauses (.c438 .c383) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op unit e5))) (not (= (op e0 e5) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c440 (resolution :clauses (.c439 .c375) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op unit e5))) (not (= (op e0 e5) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e5 e0) (op e0 e0)))))
(set .c441 (resolution :clauses (.c440 .c70 .c84 .c85 .c4 .c171) :conclusion ((not (= (op e0 e5) unit)))))
(set .c442 (resolution :clauses (.c141 .c441 .c436) :conclusion ((not (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit))))))
(set .c443 (resolution :clauses (.c142 .c442) :conclusion ((not (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit)))))))
(set .c444 (resolution :clauses (.c143 .c443) :conclusion ((not (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit)))))))
(set .c445 (resolution :clauses (.c144 .c444) :conclusion ((not (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5))))))))
(set .c446 (resolution :clauses (.c145 .c445) :conclusion ((not (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5))))))))
(set .c447 (resolution :clauses (.c146 .c446) :conclusion ((not (and (and (and (and (and (or (not (= e5 (op e0 (op e0 e5)))) (= (op e0 e5) unit)) (or (not (= e5 (op e1 (op e1 e5)))) (= (op e1 e5) unit))) (or (not (= e5 (op e2 (op e2 e5)))) (= (op e2 e5) unit))) (or (not (= e5 (op e3 (op e3 e5)))) (= unit (op e3 e5)))) (or (not (= e5 (op e4 (op e4 e5)))) (= unit (op e4 e5)))) (or (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e5) unit)))))))
(set .c448 (resolution :clauses (.c147 .c447) :conclusion ((or (or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))))))
(set .c449 (eq_transitive :conclusion ((not (= (op e0 (op e0 e1)) (op e0 e1))) (not (= (op unit e1) (op e0 e1))) (not (= e1 (op unit e1))) (= (op e0 (op e0 e1)) e1))))
(set .c450 (eq_congruent :conclusion ((not (= e0 e0)) (not (= e1 (op e0 e1))) (= (op e0 (op e0 e1)) (op e0 e1)))))
(set .c451 (resolution :clauses (.c450 .c374) :conclusion ((not (= e1 (op e0 e1))) (= (op e0 (op e0 e1)) (op e0 e1)))))
(set .c452 (resolution :clauses (.c451 .c380) :conclusion ((= (op e0 (op e0 e1)) (op e0 e1)) (not (= e1 (op unit e1))) (not (= (op unit e1) (op e0 e1))))))
(set .c453 (resolution :clauses (.c449 .c452) :conclusion ((not (= (op unit e1) (op e0 e1))) (not (= e1 (op unit e1))) (= (op e0 (op e0 e1)) e1))))
(set .c454 (resolution :clauses (.c453 .c379) :conclusion ((not (= e1 (op unit e1))) (= (op e0 (op e0 e1)) e1) (not (= e0 unit)))))
(set .c455 (resolution :clauses (.c454 .c72 .c4) :conclusion ((= (op e0 (op e0 e1)) e1))))
(set .c456 (eq_transitive :conclusion ((not (= (op e5 e5) (op e5 (op e5 e0)))) (not (= (op e5 e5) e0)) (= (op e5 (op e5 e0)) e0))))
(set .c457 (resolution :clauses (.c456 .c352) :conclusion ((not (= (op e5 e5) e0)) (= (op e5 (op e5 e0)) e0) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))))))
(set .c458 (resolution :clauses (.c457 .c339) :conclusion ((not (= (op e5 e5) e0)) (= (op e5 (op e5 e0)) e0) (not (= e5 (op e5 unit))) (not (= e0 unit)))))
(set .c459 (resolution :clauses (.c458 .c85 .c4) :conclusion ((not (= (op e5 e5) e0)) (= (op e5 (op e5 e0)) e0))))
(set .c460 (eq_transitive :conclusion ((not (= (op e3 e0) (op e3 unit))) (not (= e3 (op e3 unit))) (not (= e3 (op unit e3))) (not (= (op e0 e3) (op unit e3))) (not (= (op e0 e3) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c461 (resolution :clauses (.c460 .c345) :conclusion ((not (= e3 (op e3 unit))) (not (= e3 (op unit e3))) (not (= (op e0 e3) (op unit e3))) (not (= (op e0 e3) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c462 (resolution :clauses (.c461 .c388) :conclusion ((not (= e3 (op e3 unit))) (not (= e3 (op unit e3))) (not (= (op e0 e3) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c463 (resolution :clauses (.c462 .c375) :conclusion ((not (= e3 (op e3 unit))) (not (= e3 (op unit e3))) (not (= (op e0 e3) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c464 (resolution :clauses (.c463 .c70 .c78 .c79 .c4 .c169) :conclusion ((not (= (op e0 e3) unit)))))
(set .c465 (resolution :clauses (.c127 .c464 .c419) :conclusion ((not (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit))))))
(set .c466 (resolution :clauses (.c128 .c465) :conclusion ((not (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit)))))))
(set .c467 (resolution :clauses (.c129 .c466) :conclusion ((not (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit)))))))
(set .c468 (resolution :clauses (.c130 .c467) :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit)))))))
(set .c469 (resolution :clauses (.c131 .c468) :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit)))))))
(set .c470 (resolution :clauses (.c132 .c469) :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))))))
(set .c471 (eq_transitive :conclusion ((not (= (op e4 e0) (op e4 unit))) (not (= e4 (op e4 unit))) (not (= e4 (op unit e4))) (not (= (op unit e4) (op e0 e4))) (not (= (op e0 e4) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e4 e0) (op e0 e0)))))
(set .c472 (resolution :clauses (.c471 .c342) :conclusion ((not (= e4 (op e4 unit))) (not (= e4 (op unit e4))) (not (= (op unit e4) (op e0 e4))) (not (= (op e0 e4) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e4 e0) (op e0 e0)))))
(set .c473 (resolution :clauses (.c472 .c390) :conclusion ((not (= e4 (op e4 unit))) (not (= e4 (op unit e4))) (not (= (op e0 e4) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e4 e0) (op e0 e0)))))
(set .c474 (resolution :clauses (.c473 .c375) :conclusion ((not (= e4 (op e4 unit))) (not (= e4 (op unit e4))) (not (= (op e0 e4) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e4 e0) (op e0 e0)))))
(set .c475 (resolution :clauses (.c474 .c70 .c81 .c82 .c4 .c170) :conclusion ((not (= (op e0 e4) unit)))))
(set .c476 (resolution :clauses (.c134 .c475 .c427) :conclusion ((not (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit))))))
(set .c477 (resolution :clauses (.c135 .c476) :conclusion ((not (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4))))))))
(set .c478 (resolution :clauses (.c136 .c477) :conclusion ((not (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4))))))))
(set .c479 (resolution :clauses (.c137 .c478) :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit)))))))
(set .c480 (resolution :clauses (.c138 .c479) :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit)))))))
(set .c481 (resolution :clauses (.c139 .c480) :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e4)) e4)) (= (op e0 e4) unit)) (or (not (= e4 (op e1 (op e1 e4)))) (= unit (op e1 e4)))) (or (not (= (op e2 (op e2 e4)) e4)) (= unit (op e2 e4)))) (or (not (= (op e3 (op e3 e4)) e4)) (= (op e3 e4) unit))) (or (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e4) unit))) (or (not (= e4 (op e5 (op e5 e4)))) (= unit (op e5 e4))))))))
(set .c482 (resolution :clauses (.c140 .c481 .c448) :conclusion ((or (or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e3)) e3)) (= (op e0 e3) unit)) (or (not (= e3 (op e1 (op e1 e3)))) (= (op e1 e3) unit))) (or (not (= e3 (op e2 (op e2 e3)))) (= (op e2 e3) unit))) (or (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e3) unit))) (or (not (= (op e4 (op e4 e3)) e3)) (= (op e4 e3) unit))) (or (not (= e3 (op e5 (op e5 e3)))) (= (op e5 e3) unit)))))))
(set .c483 (resolution :clauses (.c133 .c482 .c470) :conclusion ((or (or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))) (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))))))
(set .c484 (eq_transitive :conclusion ((not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)) (not (= (op unit e2) e2)) (not (= (op e0 e2) (op unit e2))) (not (= (op e0 e2) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e2 e0) (op e0 e0)))))
(set .c485 (resolution :clauses (.c484 .c348) :conclusion ((not (= (op e2 unit) e2)) (not (= (op unit e2) e2)) (not (= (op e0 e2) (op unit e2))) (not (= (op e0 e2) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e2 e0) (op e0 e0)))))
(set .c486 (resolution :clauses (.c485 .c395) :conclusion ((not (= (op e2 unit) e2)) (not (= (op unit e2) e2)) (not (= (op e0 e2) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e2 e0) (op e0 e0)))))
(set .c487 (resolution :clauses (.c486 .c375) :conclusion ((not (= (op e2 unit) e2)) (not (= (op unit e2) e2)) (not (= (op e0 e2) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e2 e0) (op e0 e0)))))
(set .c488 (resolution :clauses (.c487 .c70 .c75 .c76 .c4 .c168) :conclusion ((not (= (op e0 e2) unit)))))
(set .c489 (resolution :clauses (.c120 .c488 .c411) :conclusion ((not (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit))))))
(set .c490 (resolution :clauses (.c121 .c489) :conclusion ((not (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2))))))))
(set .c491 (resolution :clauses (.c122 .c490) :conclusion ((not (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2))))))))
(set .c492 (resolution :clauses (.c123 .c491) :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2))))))))
(set .c493 (resolution :clauses (.c124 .c492) :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit)))))))
(set .c494 (resolution :clauses (.c125 .c493) :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e2)) e2)) (= (op e0 e2) unit)) (or (not (= (op e1 (op e1 e2)) e2)) (= unit (op e1 e2)))) (or (not (= (op e2 (op e2 e2)) e2)) (= unit (op e2 e2)))) (or (not (= (op e3 (op e3 e2)) e2)) (= unit (op e3 e2)))) (or (not (= e2 (op e4 (op e4 e2)))) (= (op e4 e2) unit))) (or (not (= e2 (op e5 (op e5 e2)))) (= (op e5 e2) unit)))))))
(set .c495 (resolution :clauses (.c126 .c494 .c483) :conclusion ((or (and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))) (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))))))
(set .c496 (eq_transitive :conclusion ((not (= unit (op e3 e0))) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c497 (resolution :clauses (.c496 .c375) :conclusion ((not (= unit (op e3 e0))) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e3 e0) (op e0 e0)))))
(set .c498 (resolution :clauses (.c497 .c70 .c4 .c169) :conclusion ((not (= unit (op e3 e0))))))
(set .c499 (eq_transitive :conclusion ((not (= e0 unit)) (not (= (op e3 e3) unit)) (not (= (op e3 e3) (op e3 (op e3 e0)))) (= e0 (op e3 (op e3 e0))))))
(set .c500 (resolution :clauses (.c499 .c360) :conclusion ((not (= e0 unit)) (not (= (op e3 e3) unit)) (= e0 (op e3 (op e3 e0))) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))))))
(set .c501 (resolution :clauses (.c500 .c345) :conclusion ((not (= e0 unit)) (not (= (op e3 e3) unit)) (= e0 (op e3 (op e3 e0))) (not (= e3 (op e3 unit))))))
(set .c502 (resolution :clauses (.c501 .c79 .c4) :conclusion ((not (= (op e3 e3) unit)) (= e0 (op e3 (op e3 e0))))))
(set .c503 (eq_congruent :conclusion ((not (= e5 e5)) (not (= (op e5 e5) e4)) (= (op e5 (op e5 e5)) (op e5 e4)))))
(set .c504 (resolution :clauses (.c503 .c338) :conclusion ((not (= (op e5 e5) e4)) (= (op e5 (op e5 e5)) (op e5 e4)))))
(set .c505 (eq_congruent :conclusion ((not (= e3 e3)) (not (= e5 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e5)))))
(set .c506 (resolution :clauses (.c505 .c344) :conclusion ((not (= e5 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e5)))))
(set .c507 (eq_transitive :conclusion ((not (= e0 (op e2 e2))) (not (= (op e2 (op e2 e0)) (op e2 e2))) (= e0 (op e2 (op e2 e0))))))
(set .c508 (resolution :clauses (.c507 .c364) :conclusion ((not (= e0 (op e2 e2))) (= e0 (op e2 (op e2 e0))) (not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)))))
(set .c509 (resolution :clauses (.c508 .c348) :conclusion ((not (= e0 (op e2 e2))) (= e0 (op e2 (op e2 e0))) (not (= (op e2 unit) e2)) (not (= e0 unit)))))
(set .c510 (resolution :clauses (.c509 .c76 .c4) :conclusion ((not (= e0 (op e2 e2))) (= e0 (op e2 (op e2 e0))))))
(set .c511 (eq_transitive :conclusion ((not (= (op e1 e1) e0)) (not (= (op e1 e1) (op e1 (op e1 e0)))) (= e0 (op e1 (op e1 e0))))))
(set .c512 (resolution :clauses (.c511 .c371) :conclusion ((not (= (op e1 e1) e0)) (= e0 (op e1 (op e1 e0))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))))))
(set .c513 (resolution :clauses (.c512 .c368) :conclusion ((not (= (op e1 e1) e0)) (= e0 (op e1 (op e1 e0))) (not (= (op e1 unit) e1)) (not (= e0 unit)))))
(set .c514 (resolution :clauses (.c513 .c73 .c4) :conclusion ((not (= (op e1 e1) e0)) (= e0 (op e1 (op e1 e0))))))
(set .c515 (eq_congruent :conclusion ((not (= e1 e1)) (not (= (op e1 e1) e3)) (= (op e1 e3) (op e1 (op e1 e1))))))
(set .c516 (resolution :clauses (.c515 .c367) :conclusion ((not (= (op e1 e1) e3)) (= (op e1 e3) (op e1 (op e1 e1))))))
(set .c517 (eq_congruent :conclusion ((not (= e2 e2)) (not (= e1 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e1)))))
(set .c518 (resolution :clauses (.c517 .c347) :conclusion ((not (= e1 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e1)))))
(set .c519 (eq_congruent :conclusion ((not (= e4 e4)) (not (= e5 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e5)))))
(set .c520 (resolution :clauses (.c519 .c341) :conclusion ((not (= e5 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e5)))))
(set .c521 (eq_transitive :conclusion ((not (= (op e1 unit) (op e1 e0))) (not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 (op e1 e1)) (op e1 e4))) (= (op e1 e0) (op e1 e4)))))
(set .c522 (resolution :clauses (.c521 .c368) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 (op e1 e1)) (op e1 e4))) (= (op e1 e0) (op e1 e4)) (not (= e0 unit)))))
(set .c523 (eq_congruent :conclusion ((not (= e1 e1)) (not (= e4 (op e1 e1))) (= (op e1 (op e1 e1)) (op e1 e4)))))
(set .c524 (resolution :clauses (.c523 .c367) :conclusion ((not (= e4 (op e1 e1))) (= (op e1 (op e1 e1)) (op e1 e4)))))
(set .c525 (resolution :clauses (.c522 .c524) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e0) (op e1 e4)) (not (= e0 unit)) (not (= e4 (op e1 e1))))))
(set .c526 (resolution :clauses (.c525 .c73 .c4 .c262) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= e4 (op e1 e1))))))
(set .c527 (eq_transitive :conclusion ((not (= (op unit e1) (op e0 e1))) (not (= e1 (op unit e1))) (not (= e1 (op e1 e1))) (= (op e0 e1) (op e1 e1)))))
(set .c528 (resolution :clauses (.c527 .c379) :conclusion ((not (= e1 (op unit e1))) (not (= e1 (op e1 e1))) (= (op e0 e1) (op e1 e1)) (not (= e0 unit)))))
(set .c529 (resolution :clauses (.c528 .c72 .c4 .c186) :conclusion ((not (= e1 (op e1 e1))))))
(set .c530 (eq_congruent :conclusion ((not (= e2 e2)) (not (= e3 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e3)))))
(set .c531 (resolution :clauses (.c530 .c347) :conclusion ((not (= e3 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e3)))))
(set .c532 (eq_transitive :conclusion ((not (= (op e1 unit) (op e1 e0))) (not (= (op e1 unit) e1)) (not (= e1 (op unit e1))) (not (= (op unit e1) (op e0 e1))) (not (= (op e0 e1) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c533 (resolution :clauses (.c532 .c368) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op unit e1))) (not (= (op unit e1) (op e0 e1))) (not (= (op e0 e1) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c534 (resolution :clauses (.c533 .c379) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op unit e1))) (not (= (op e0 e1) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (not (= (op e0 e0) (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c535 (resolution :clauses (.c534 .c375) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op unit e1))) (not (= (op e0 e1) unit)) (not (= e0 unit)) (not (= e0 (op e0 unit))) (= (op e1 e0) (op e0 e0)))))
(set .c536 (resolution :clauses (.c535 .c70 .c72 .c73 .c4 .c167) :conclusion ((not (= (op e0 e1) unit)))))
(set .c537 (resolution :clauses (.c113 .c536 .c455) :conclusion ((not (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit))))))
(set .c538 (resolution :clauses (.c114 .c537) :conclusion ((not (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit)))))))
(set .c539 (resolution :clauses (.c115 .c538) :conclusion ((not (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit)))))))
(set .c540 (resolution :clauses (.c116 .c539) :conclusion ((not (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1))))))))
(set .c541 (resolution :clauses (.c117 .c540) :conclusion ((not (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1))))))))
(set .c542 (resolution :clauses (.c118 .c541) :conclusion ((not (and (and (and (and (and (or (not (= (op e0 (op e0 e1)) e1)) (= (op e0 e1) unit)) (or (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e1) unit))) (or (not (= e1 (op e2 (op e2 e1)))) (= (op e2 e1) unit))) (or (not (= e1 (op e3 (op e3 e1)))) (= unit (op e3 e1)))) (or (not (= (op e4 (op e4 e1)) e1)) (= unit (op e4 e1)))) (or (not (= e1 (op e5 (op e5 e1)))) (= (op e5 e1) unit)))))))
(set .c543 (resolution :clauses (.c119 .c542 .c495) :conclusion ((and (and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))) (or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit))))))
(set .c544 (resolution :clauses (.c110 .c543) :conclusion ((and (and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))) (or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0)))))))
(set .c545 (resolution :clauses (.c112 .c543) :conclusion ((or (not (= (op e5 (op e5 e0)) e0)) (= (op e5 e0) unit)))))
(set .c546 (resolution :clauses (.c107 .c544) :conclusion ((and (and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))) (or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0)))))))
(set .c547 (resolution :clauses (.c109 .c544) :conclusion ((or (not (= e0 (op e4 (op e4 e0)))) (= unit (op e4 e0))))))
(set .c548 (resolution :clauses (.c111 .c545 .c403) :conclusion ((not (= (op e5 (op e5 e0)) e0)))))
(set .c549 (resolution :clauses (.c104 .c546) :conclusion ((and (and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))) (or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit))))))
(set .c550 (resolution :clauses (.c106 .c546) :conclusion ((or (not (= e0 (op e3 (op e3 e0)))) (= unit (op e3 e0))))))
(set .c551 (resolution :clauses (.c459 .c548) :conclusion ((not (= (op e5 e5) e0)))))
(set .c552 (resolution :clauses (.c101 .c549) :conclusion ((and (or (not (= (op e0 (op e0 e0)) e0)) (= unit (op e0 e0))) (or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit))))))
(set .c553 (resolution :clauses (.c103 .c549) :conclusion ((or (not (= e0 (op e2 (op e2 e0)))) (= (op e2 e0) unit)))))
(set .c554 (resolution :clauses (.c105 .c550 .c498) :conclusion ((not (= e0 (op e3 (op e3 e0)))))))
(set .c555 (resolution :clauses (.c100 .c552) :conclusion ((or (not (= e0 (op e1 (op e1 e0)))) (= (op e1 e0) unit)))))
(set .c556 (resolution :clauses (.c502 .c554) :conclusion ((not (= (op e3 e3) unit)))))
(set .c557 (resolution :clauses (.c99 .c555 .c377) :conclusion ((not (= e0 (op e1 (op e1 e0)))))))
(set .c558 (resolution :clauses (.c400 .c556) :conclusion ((not (= e0 (op e3 e3))))))
(set .c559 (resolution :clauses (.c514 .c557) :conclusion ((not (= (op e1 e1) e0)))))
(set .c560 (resolution :clauses (.c25 .c559 .c529) :conclusion ((not (or (= (op e1 e1) e0) (= e1 (op e1 e1)))))))
(set .c561 (eq_transitive :conclusion ((not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e4))) (= (op e2 e0) (op e2 e4)))))
(set .c562 (resolution :clauses (.c561 .c348) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e4))) (= (op e2 e0) (op e2 e4)) (not (= e0 unit)))))
(set .c563 (eq_congruent :conclusion ((not (= e2 e2)) (not (= e4 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e4)))))
(set .c564 (resolution :clauses (.c563 .c347) :conclusion ((not (= e4 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e4)))))
(set .c565 (resolution :clauses (.c562 .c564) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (= (op e2 e0) (op e2 e4)) (not (= e0 unit)) (not (= e4 (op e2 e2))))))
(set .c566 (resolution :clauses (.c565 .c76 .c4 .c280) :conclusion ((not (= (op e2 (op e2 e2)) e2)) (not (= e4 (op e2 e2))))))
(set .c567 (eq_congruent :conclusion ((not (= e2 e2)) (not (= e5 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e5)))))
(set .c568 (resolution :clauses (.c567 .c347) :conclusion ((not (= e5 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e5)))))
(set .c569 (eq_transitive :conclusion ((not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)) (not (= e2 (op e2 e2))) (= (op e0 e2) (op e2 e2)))))
(set .c570 (resolution :clauses (.c569 .c395) :conclusion ((not (= (op unit e2) e2)) (not (= e2 (op e2 e2))) (= (op e0 e2) (op e2 e2)) (not (= e0 unit)))))
(set .c571 (resolution :clauses (.c570 .c75 .c4 .c201) :conclusion ((not (= e2 (op e2 e2))))))
(set .c572 (eq_transitive :conclusion ((not (= (op e1 e5) (op e1 (op e1 e1)))) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))) (= (op e1 e5) (op e1 e0)))))
(set .c573 (eq_congruent :conclusion ((not (= e1 e1)) (not (= e5 (op e1 e1))) (= (op e1 e5) (op e1 (op e1 e1))))))
(set .c574 (resolution :clauses (.c573 .c367) :conclusion ((not (= e5 (op e1 e1))) (= (op e1 e5) (op e1 (op e1 e1))))))
(set .c575 (resolution :clauses (.c572 .c574) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))) (= (op e1 e5) (op e1 e0)) (not (= e5 (op e1 e1))))))
(set .c576 (resolution :clauses (.c575 .c368) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (= (op e1 e5) (op e1 e0)) (not (= e5 (op e1 e1))) (not (= e0 unit)))))
(set .c577 (resolution :clauses (.c576 .c73 .c4 .c263) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= e5 (op e1 e1))))))
(set .c578 (resolution :clauses (.c29 .c28 .c577 .c526) :conclusion ((or (or (or (= (op e1 e1) e0) (= e1 (op e1 e1))) (= (op e1 e1) e2)) (= (op e1 e1) e3)) (not (= e1 (op e1 (op e1 e1)))))))
(set .c579 (eq_congruent :conclusion ((not (= e3 e3)) (not (= e4 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e4)))))
(set .c580 (resolution :clauses (.c579 .c344) :conclusion ((not (= e4 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e4)))))
(set .c581 (eq_transitive :conclusion ((not (= (op e3 (op e3 e3)) (op e3 e4))) (not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))) (= (op e3 e4) (op e3 e0)))))
(set .c582 (resolution :clauses (.c581 .c580) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))) (= (op e3 e4) (op e3 e0)) (not (= e4 (op e3 e3))))))
(set .c583 (resolution :clauses (.c582 .c345) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (= (op e3 e4) (op e3 e0)) (not (= e4 (op e3 e3))) (not (= e0 unit)))))
(set .c584 (resolution :clauses (.c583 .c79 .c4 .c298) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e4 (op e3 e3))))))
(set .c585 (eq_transitive :conclusion ((not (= (op e4 e0) (op e4 unit))) (not (= e4 (op e4 unit))) (not (= e4 (op e4 (op e4 e4)))) (not (= (op e4 (op e4 e4)) (op e4 e5))) (= (op e4 e0) (op e4 e5)))))
(set .c586 (resolution :clauses (.c585 .c342) :conclusion ((not (= e4 (op e4 unit))) (not (= e4 (op e4 (op e4 e4)))) (not (= (op e4 (op e4 e4)) (op e4 e5))) (= (op e4 e0) (op e4 e5)) (not (= e0 unit)))))
(set .c587 (resolution :clauses (.c586 .c520) :conclusion ((not (= e4 (op e4 unit))) (not (= e4 (op e4 (op e4 e4)))) (= (op e4 e0) (op e4 e5)) (not (= e0 unit)) (not (= e5 (op e4 e4))))))
(set .c588 (resolution :clauses (.c587 .c82 .c4 .c317) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e5 (op e4 e4))))))
(set .c589 (eq_transitive :conclusion ((not (= (op e5 e3) (op e5 (op e5 e5)))) (not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))) (= (op e5 e3) (op e5 e0)))))
(set .c590 (eq_congruent :conclusion ((not (= e5 e5)) (not (= (op e5 e5) e3)) (= (op e5 e3) (op e5 (op e5 e5))))))
(set .c591 (resolution :clauses (.c590 .c338) :conclusion ((not (= (op e5 e5) e3)) (= (op e5 e3) (op e5 (op e5 e5))))))
(set .c592 (resolution :clauses (.c589 .c591) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))) (= (op e5 e3) (op e5 e0)) (not (= (op e5 e5) e3)))))
(set .c593 (resolution :clauses (.c592 .c339) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (= (op e5 e3) (op e5 e0)) (not (= (op e5 e5) e3)) (not (= e0 unit)))))
(set .c594 (resolution :clauses (.c593 .c85 .c4 .c334) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e5) e3)))))
(set .c595 (eq_transitive :conclusion ((not (= (op e4 e4) e0)) (not (= (op e4 e4) (op e4 (op e4 e0)))) (= e0 (op e4 (op e4 e0))))))
(set .c596 (resolution :clauses (.c595 .c356) :conclusion ((not (= (op e4 e4) e0)) (= e0 (op e4 (op e4 e0))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))))))
(set .c597 (resolution :clauses (.c596 .c342) :conclusion ((not (= (op e4 e4) e0)) (= e0 (op e4 (op e4 e0))) (not (= e4 (op e4 unit))) (not (= e0 unit)))))
(set .c598 (resolution :clauses (.c597 .c82 .c4) :conclusion ((not (= (op e4 e4) e0)) (= e0 (op e4 (op e4 e0))))))
(set .c599 (eq_transitive :conclusion ((not (= (op unit e4) (op e0 e4))) (not (= e4 (op unit e4))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (not (= unit (op e4 e0))) (not (= e0 unit)) (not (= (op e4 e4) e0)) (= (op e0 e4) (op e4 e4)))))
(set .c600 (resolution :clauses (.c599 .c390) :conclusion ((not (= e4 (op unit e4))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (not (= unit (op e4 e0))) (not (= e0 unit)) (not (= (op e4 e4) e0)) (= (op e0 e4) (op e4 e4)))))
(set .c601 (resolution :clauses (.c600 .c342) :conclusion ((not (= e4 (op unit e4))) (not (= e4 (op e4 unit))) (not (= unit (op e4 e0))) (not (= e0 unit)) (not (= (op e4 e4) e0)) (= (op e0 e4) (op e4 e4)))))
(set .c602 (resolution :clauses (.c601 .c81 .c82 .c4 .c228) :conclusion ((not (= unit (op e4 e0))) (not (= (op e4 e4) e0)))))
(set .c603 (resolution :clauses (.c602 .c108 .c598 .c547) :conclusion ((not (= (op e4 e4) e0)))))
(set .c604 (eq_transitive :conclusion ((not (= (op e4 (op e4 e4)) (op e4 e1))) (not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e1) (op e4 e0)))))
(set .c605 (eq_congruent :conclusion ((not (= e4 e4)) (not (= e1 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e1)))))
(set .c606 (resolution :clauses (.c605 .c341) :conclusion ((not (= e1 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e1)))))
(set .c607 (resolution :clauses (.c604 .c606) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e1) (op e4 e0)) (not (= e1 (op e4 e4))))))
(set .c608 (resolution :clauses (.c607 .c342) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (= (op e4 e1) (op e4 e0)) (not (= e1 (op e4 e4))) (not (= e0 unit)))))
(set .c609 (resolution :clauses (.c608 .c82 .c4 .c314) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e1 (op e4 e4))))))
(set .c610 (eq_transitive :conclusion ((not (= (op e2 (op e2 e2)) (op e2 e1))) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 unit) e2)) (not (= (op e2 unit) (op e2 e0))) (= (op e2 e1) (op e2 e0)))))
(set .c611 (resolution :clauses (.c610 .c518) :conclusion ((not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 unit) e2)) (not (= (op e2 unit) (op e2 e0))) (= (op e2 e1) (op e2 e0)) (not (= e1 (op e2 e2))))))
(set .c612 (resolution :clauses (.c611 .c348) :conclusion ((not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 unit) e2)) (= (op e2 e1) (op e2 e0)) (not (= e1 (op e2 e2))) (not (= e0 unit)))))
(set .c613 (resolution :clauses (.c612 .c76 .c4 .c278) :conclusion ((not (= (op e2 (op e2 e2)) e2)) (not (= e1 (op e2 e2))))))
(set .c614 (eq_transitive :conclusion ((not (= (op e0 e2) (op unit e2))) (not (= (op unit e2) e2)) (not (= (op e2 unit) e2)) (not (= (op e2 unit) (op e2 e0))) (not (= (op e2 e0) unit)) (not (= e0 unit)) (not (= e0 (op e2 e2))) (= (op e0 e2) (op e2 e2)))))
(set .c615 (resolution :clauses (.c614 .c395) :conclusion ((not (= (op unit e2) e2)) (not (= (op e2 unit) e2)) (not (= (op e2 unit) (op e2 e0))) (not (= (op e2 e0) unit)) (not (= e0 unit)) (not (= e0 (op e2 e2))) (= (op e0 e2) (op e2 e2)))))
(set .c616 (resolution :clauses (.c615 .c348) :conclusion ((not (= (op unit e2) e2)) (not (= (op e2 unit) e2)) (not (= (op e2 e0) unit)) (not (= e0 unit)) (not (= e0 (op e2 e2))) (= (op e0 e2) (op e2 e2)))))
(set .c617 (resolution :clauses (.c616 .c75 .c76 .c4 .c201) :conclusion ((not (= (op e2 e0) unit)) (not (= e0 (op e2 e2))))))
(set .c618 (resolution :clauses (.c617 .c102 .c510 .c553) :conclusion ((not (= e0 (op e2 e2))))))
(set .c619 (eq_transitive :conclusion ((not (= (op e1 unit) (op e1 e0))) (not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 (op e1 e1)) (op e1 e2))) (= (op e1 e0) (op e1 e2)))))
(set .c620 (resolution :clauses (.c619 .c368) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 (op e1 e1)) (op e1 e2))) (= (op e1 e0) (op e1 e2)) (not (= e0 unit)))))
(set .c621 (eq_congruent :conclusion ((not (= e1 e1)) (not (= (op e1 e1) e2)) (= (op e1 (op e1 e1)) (op e1 e2)))))
(set .c622 (resolution :clauses (.c621 .c367) :conclusion ((not (= (op e1 e1) e2)) (= (op e1 (op e1 e1)) (op e1 e2)))))
(set .c623 (resolution :clauses (.c620 .c622) :conclusion ((not (= (op e1 unit) e1)) (not (= e1 (op e1 (op e1 e1)))) (= (op e1 e0) (op e1 e2)) (not (= e0 unit)) (not (= (op e1 e1) e2)))))
(set .c624 (resolution :clauses (.c623 .c73 .c4 .c260) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 e1) e2)))))
(set .c625 (eq_congruent :conclusion ((not (= e4 e4)) (not (= e3 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e3)))))
(set .c626 (resolution :clauses (.c625 .c341) :conclusion ((not (= e3 (op e4 e4))) (= (op e4 (op e4 e4)) (op e4 e3)))))
(set .c627 (eq_transitive :conclusion ((not (= (op e5 unit) (op e5 e0))) (not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 (op e5 e5)) (op e5 e4))) (= (op e5 e0) (op e5 e4)))))
(set .c628 (resolution :clauses (.c627 .c339) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 (op e5 e5)) (op e5 e4))) (= (op e5 e0) (op e5 e4)) (not (= e0 unit)))))
(set .c629 (resolution :clauses (.c628 .c504) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e0) (op e5 e4)) (not (= e0 unit)) (not (= (op e5 e5) e4)))))
(set .c630 (resolution :clauses (.c629 .c85 .c4 .c335) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e5) e4)))))
(set .c631 (resolution :clauses (.c630 .c62 .c61 .c594 .c386) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (or (or (= (op e5 e5) e0) (= (op e5 e5) e1)) (= (op e5 e5) e2)))))
(set .c632 (eq_transitive :conclusion ((not (= (op e4 (op e4 e4)) (op e4 e3))) (not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e3) (op e4 e0)))))
(set .c633 (resolution :clauses (.c632 .c626) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e3) (op e4 e0)) (not (= e3 (op e4 e4))))))
(set .c634 (resolution :clauses (.c633 .c342) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (= (op e4 e3) (op e4 e0)) (not (= e3 (op e4 e4))) (not (= e0 unit)))))
(set .c635 (resolution :clauses (.c634 .c82 .c4 .c316) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e3 (op e4 e4))))))
(set .c636 (eq_transitive :conclusion ((not (= (op e4 (op e4 e4)) (op e4 e2))) (not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e2) (op e4 e0)))))
(set .c637 (eq_congruent :conclusion ((not (= e4 e4)) (not (= (op e4 e4) e2)) (= (op e4 (op e4 e4)) (op e4 e2)))))
(set .c638 (resolution :clauses (.c637 .c341) :conclusion ((not (= (op e4 e4) e2)) (= (op e4 (op e4 e4)) (op e4 e2)))))
(set .c639 (resolution :clauses (.c636 .c638) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (not (= (op e4 e0) (op e4 unit))) (= (op e4 e2) (op e4 e0)) (not (= (op e4 e4) e2)))))
(set .c640 (resolution :clauses (.c639 .c342) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e4 unit))) (= (op e4 e2) (op e4 e0)) (not (= (op e4 e4) e2)) (not (= e0 unit)))))
(set .c641 (resolution :clauses (.c640 .c82 .c4 .c315) :conclusion ((not (= e4 (op e4 (op e4 e4)))) (not (= (op e4 e4) e2)))))
(set .c642 (resolution :clauses (.c641 .c53 .c54 .c635 .c55 .c52 .c56 .c609 .c588 .c393 .c603) :conclusion ((not (= e4 (op e4 (op e4 e4)))))))
(set .c643 (resolution :clauses (.c94 .c642) :conclusion ((not (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))))))
(set .c644 (eq_transitive :conclusion ((not (= (op e1 e3) (op e1 (op e1 e1)))) (not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))) (= (op e1 e3) (op e1 e0)))))
(set .c645 (resolution :clauses (.c644 .c516) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (not (= (op e1 unit) (op e1 e0))) (= (op e1 e3) (op e1 e0)) (not (= (op e1 e1) e3)))))
(set .c646 (resolution :clauses (.c645 .c368) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 unit) e1)) (= (op e1 e3) (op e1 e0)) (not (= (op e1 e1) e3)) (not (= e0 unit)))))
(set .c647 (resolution :clauses (.c646 .c73 .c4 .c261) :conclusion ((not (= e1 (op e1 (op e1 e1)))) (not (= (op e1 e1) e3)))))
(set .c648 (resolution :clauses (.c647 .c27 .c26 .c624 .c578 .c560) :conclusion ((not (= e1 (op e1 (op e1 e1)))))))
(set .c649 (resolution :clauses (.c88 .c648) :conclusion ((not (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))))))
(set .c650 (resolution :clauses (.c89 .c649 .c336) :conclusion ((not (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit))))))))
(set .c651 (eq_transitive :conclusion ((not (= (op e3 e0) (op e3 unit))) (not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (not (= (op e3 (op e3 e3)) (op e3 e1))) (= (op e3 e0) (op e3 e1)))))
(set .c652 (resolution :clauses (.c651 .c345) :conclusion ((not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (not (= (op e3 (op e3 e3)) (op e3 e1))) (= (op e3 e0) (op e3 e1)) (not (= e0 unit)))))
(set .c653 (eq_congruent :conclusion ((not (= e3 e3)) (not (= e1 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e1)))))
(set .c654 (resolution :clauses (.c653 .c344) :conclusion ((not (= e1 (op e3 e3))) (= (op e3 (op e3 e3)) (op e3 e1)))))
(set .c655 (resolution :clauses (.c652 .c654) :conclusion ((not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e0) (op e3 e1)) (not (= e0 unit)) (not (= e1 (op e3 e3))))))
(set .c656 (resolution :clauses (.c655 .c79 .c4 .c296) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e1 (op e3 e3))))))
(set .c657 (eq_transitive :conclusion ((not (= (op e5 unit) (op e5 e0))) (not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e1) (op e5 (op e5 e5)))) (= (op e5 e0) (op e5 e1)))))
(set .c658 (resolution :clauses (.c657 .c339) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e1) (op e5 (op e5 e5)))) (= (op e5 e0) (op e5 e1)) (not (= e0 unit)))))
(set .c659 (eq_congruent :conclusion ((not (= e5 e5)) (not (= (op e5 e5) e1)) (= (op e5 e1) (op e5 (op e5 e5))))))
(set .c660 (resolution :clauses (.c659 .c338) :conclusion ((not (= (op e5 e5) e1)) (= (op e5 e1) (op e5 (op e5 e5))))))
(set .c661 (resolution :clauses (.c658 .c660) :conclusion ((not (= e5 (op e5 unit))) (not (= e5 (op e5 (op e5 e5)))) (= (op e5 e0) (op e5 e1)) (not (= e0 unit)) (not (= (op e5 e5) e1)))))
(set .c662 (resolution :clauses (.c661 .c85 .c4 .c332) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e5) e1)))))
(set .c663 (eq_transitive :conclusion ((not (= (op e5 e2) (op e5 (op e5 e5)))) (not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))) (= (op e5 e2) (op e5 e0)))))
(set .c664 (eq_congruent :conclusion ((not (= e5 e5)) (not (= (op e5 e5) e2)) (= (op e5 e2) (op e5 (op e5 e5))))))
(set .c665 (resolution :clauses (.c664 .c338) :conclusion ((not (= (op e5 e5) e2)) (= (op e5 e2) (op e5 (op e5 e5))))))
(set .c666 (resolution :clauses (.c663 .c665) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (not (= (op e5 unit) (op e5 e0))) (= (op e5 e2) (op e5 e0)) (not (= (op e5 e5) e2)))))
(set .c667 (resolution :clauses (.c666 .c339) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= e5 (op e5 unit))) (= (op e5 e2) (op e5 e0)) (not (= (op e5 e5) e2)) (not (= e0 unit)))))
(set .c668 (resolution :clauses (.c667 .c85 .c4 .c333) :conclusion ((not (= e5 (op e5 (op e5 e5)))) (not (= (op e5 e5) e2)))))
(set .c669 (resolution :clauses (.c668 .c60 .c59 .c662 .c631 .c551) :conclusion ((not (= e5 (op e5 (op e5 e5)))))))
(set .c670 (resolution :clauses (.c96 .c669) :conclusion ((not (and (= e5 (op e5 (op e5 e5))) (not (= e5 unit)))))))
(set .c671 (resolution :clauses (.c97 .c670) :conclusion ((or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))) (and (= e4 (op e4 (op e4 e4))) (not (= e4 unit)))))))
(set .c672 (resolution :clauses (.c95 .c671 .c643) :conclusion ((or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))) (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))))))
(set .c673 (eq_transitive :conclusion ((not (= (op e3 (op e3 e3)) (op e3 e2))) (not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))) (= (op e3 e2) (op e3 e0)))))
(set .c674 (eq_congruent :conclusion ((not (= e3 e3)) (not (= (op e3 e3) e2)) (= (op e3 (op e3 e3)) (op e3 e2)))))
(set .c675 (resolution :clauses (.c674 .c344) :conclusion ((not (= (op e3 e3) e2)) (= (op e3 (op e3 e3)) (op e3 e2)))))
(set .c676 (resolution :clauses (.c673 .c675) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (not (= (op e3 e0) (op e3 unit))) (= (op e3 e2) (op e3 e0)) (not (= (op e3 e3) e2)))))
(set .c677 (resolution :clauses (.c676 .c345) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e3 (op e3 unit))) (= (op e3 e2) (op e3 e0)) (not (= (op e3 e3) e2)) (not (= e0 unit)))))
(set .c678 (resolution :clauses (.c677 .c79 .c4 .c297) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= (op e3 e3) e2)))))
(set .c679 (eq_transitive :conclusion ((not (= (op e3 e0) (op e3 unit))) (not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (not (= (op e3 (op e3 e3)) (op e3 e5))) (= (op e3 e0) (op e3 e5)))))
(set .c680 (resolution :clauses (.c679 .c345) :conclusion ((not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (not (= (op e3 (op e3 e3)) (op e3 e5))) (= (op e3 e0) (op e3 e5)) (not (= e0 unit)))))
(set .c681 (resolution :clauses (.c680 .c506) :conclusion ((not (= e3 (op e3 unit))) (not (= (op e3 (op e3 e3)) e3)) (= (op e3 e0) (op e3 e5)) (not (= e0 unit)) (not (= e5 (op e3 e3))))))
(set .c682 (resolution :clauses (.c681 .c79 .c4 .c299) :conclusion ((not (= (op e3 (op e3 e3)) e3)) (not (= e5 (op e3 e3))))))
(set .c683 (resolution :clauses (.c682 .c48 .c47 .c46 .c45 .c678 .c44 .c656 .c584 .c398 .c558) :conclusion ((not (= (op e3 (op e3 e3)) e3)))))
(set .c684 (resolution :clauses (.c92 .c683) :conclusion ((not (and (= (op e3 (op e3 e3)) e3) (not (= e3 unit)))))))
(set .c685 (resolution :clauses (.c93 .c684 .c672) :conclusion ((or (or (and (= (op e0 (op e0 e0)) e0) (not (= e0 unit))) (and (= e1 (op e1 (op e1 e1))) (not (= e1 unit)))) (and (= (op e2 (op e2 e2)) e2) (not (= unit e2)))))))
(set .c686 (resolution :clauses (.c91 .c685 .c650) :conclusion ((and (= (op e2 (op e2 e2)) e2) (not (= unit e2))))))
(set .c687 (resolution :clauses (.c90 .c686) :conclusion ((= (op e2 (op e2 e2)) e2))))
(set .c688 (resolution :clauses (.c566 .c687) :conclusion ((not (= e4 (op e2 e2))))))
(set .c689 (resolution :clauses (.c613 .c687) :conclusion ((not (= e1 (op e2 e2))))))
(set .c690 (resolution :clauses (.c35 .c689 .c618) :conclusion ((not (or (= e0 (op e2 e2)) (= e1 (op e2 e2)))))))
(set .c691 (resolution :clauses (.c36 .c690 .c571) :conclusion ((not (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2)))))))
(set .c692 (eq_transitive :conclusion ((not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e5))) (= (op e2 e0) (op e2 e5)))))
(set .c693 (resolution :clauses (.c692 .c348) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e5))) (= (op e2 e0) (op e2 e5)) (not (= e0 unit)))))
(set .c694 (resolution :clauses (.c693 .c568) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (= (op e2 e0) (op e2 e5)) (not (= e0 unit)) (not (= e5 (op e2 e2))))))
(set .c695 (resolution :clauses (.c694 .c76 .c4 .c687 .c281) :conclusion ((not (= e5 (op e2 e2))))))
(set .c696 (resolution :clauses (.c39 .c695) :conclusion ((or (or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))) (= e4 (op e2 e2))))))
(set .c697 (resolution :clauses (.c38 .c696 .c688) :conclusion ((or (or (or (= e0 (op e2 e2)) (= e1 (op e2 e2))) (= e2 (op e2 e2))) (= e3 (op e2 e2))))))
(set .c698 (resolution :clauses (.c37 .c697 .c691) :conclusion ((= e3 (op e2 e2)))))
(set .c699 (eq_transitive :conclusion ((not (= (op e2 unit) (op e2 e0))) (not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e3))) (= (op e2 e0) (op e2 e3)))))
(set .c700 (resolution :clauses (.c699 .c348) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (not (= (op e2 (op e2 e2)) (op e2 e3))) (= (op e2 e0) (op e2 e3)) (not (= e0 unit)))))
(set .c701 (resolution :clauses (.c700 .c531) :conclusion ((not (= (op e2 unit) e2)) (not (= (op e2 (op e2 e2)) e2)) (= (op e2 e0) (op e2 e3)) (not (= e0 unit)) (not (= e3 (op e2 e2))))))
(set .c702 (resolution :clauses (.c701 .c698 .c76 .c4 .c687 .c279) :conclusion ()))
